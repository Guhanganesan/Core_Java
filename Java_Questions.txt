Question Stem
Which of the following features of SDE allows us to rename or move a class/interface/package in a project?
"Consider the following code:

class TM {
    public static void main(String a[]) {
        System.out.println(a[0]+a[0].length()+a.length);
    }
}

Select the valid inputs and outputs. (Choose 2)"
"Consider the following code snippet:

class CallMain {
    public static void main(String a[]) {
        if(a.length != 0) {
            String b[] = new String[a.length - 1];
            System.out.println(a[a.length-1]);
            main(b);
        }
    }
}

On compiling and running as follows:

java CallMain Call Main

What will be the output of the above code snippet?"
Which of the following codes will compile and run properly?
"Consider the following code snippet:

class Test {
    public static void Main(String args[]) {
        System.out.println(""This is correct"");
    }

    public static void main(String args) {
        System.out.println(""This is also correct"");
    }

    static public void main(String[] args) {
        System.out.println(""This may work"");
    }

    public static void main(String[] d[]) {
        System.out.println(""This won\'t work"");
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

class Train {
    String name = ""Shatapdhi"";
}

class TestTrain {
    public static void main(String a[]) {
        Train t = new Train();
        System.out.println(t);    // Line a
        System.out.println(t.toString());    // Line b
    }
}

Which of the following statements are true?(Choose 3)"
"Consider the following code snippet:

class Animal {
    String name;
    public boolean equals(Object o) {
        Animal a = (Animal) o;
        // Code Here
    }
}

class TestAnimal {
    public static void main(String args[]) {
        Animal a = new Animal();
        a.name = ""Dog"";
        Animal b = new Animal();
        b.name = ""dog"";

        System.out.println(a.equals(b));
    }
}

Which of the following code snippets should be replaced for the comment line (//Code Here) in the above given code, to get the output as true?"
"Consider the following code snippet:

class Vehicle {
    String name;

    // method definition
}

class TestVehicle {
    public static void main(String a[]) {
        Vehicle v = new Vehicle();
        v.name = ""Santro"";
        System.out.println(v); // Line 1
    }
}

Which of the following code pieces, when replaced for the comment line (// Code Here), so that (// Line 1) gives the output ""Santro""?"
Which are all platform independent among the following? (Choose 3)
Which of the following are uses of Object class?(Choose 3)
Which of the following methods are defined in Object class? (Choose 3)
Which of the following statements are true?(Choose 2)
Which of the following statements are true regarding equals() method?(Choose 3)
Which of the following statements are true regarding toString() method?(Choose 3)
Which of the following statements are true?(Choose 2)
Which of the following actions include the external library required by Java application at runtime in order to run properly? (choose 2)
Which of the following are features of SDE?(Choose 3)
For any two objects a and b of same type, which of the following statements are true regarding the equals() and hashCode() methods? (Choose 3)
Which of the following code and their comments are true? (Choose 2)
"Consider the following code snippet:

class Test22 {
    public static void Main(String args[]) {
        System.out.println(""This is correct"");
        main(args[0]);
    }

    public static void main(String args) {
        System.out.println(""This is also correct"");
    }

    static public void main(String[] args) {
        System.out.println(""This may work"");
        args = new String[1];
        Main(args);
    }

    public static void main(String[] d[]) {
        System.out.println(""This won\'t work"");
    }
}

Which of the above will be output of the above code?"
Which of the following statements are true regarding Garbage Collection?(Choose 3)
Which of the following statements are true regarding invoking Garbage Collector?(Choose 2)
What methods does the java.lang.Runtime class provide related to memory management?(Choose 3)
Which of the following algorithms are used for Garbage Collector implementation? (Choose 3)
The purpose of Soft Reference Type object is ______________.
The purpose of Weak Reference Type object is _______________.
The purpose of Phantom Reference Type object is _________.
Which of the following is true about finalize() method?
By which of the following ways an object can be made eligible for Garbage Collection? (choose 3)
Which of the following statements are true? (choose 2)
"Consider the following code snippet:

1.  class Garbage { }
2.  class GC1 {
3.     public static void main(String a[]) {
4.         Garbage s = new Garbage();
5.         {
6.             s = new Garbage();
7.         }
8.         s = new Garbage();
9.     }
10. }

Which of the following options gives the correct combination of lines that makes objects eligible for garbage Collection?"
"Consider the following code snippets:

class GC2 {
    public GC2 getIt(GC2 gc2) {
        return gc2;
    }

    public static void main(String a[]) {
        GC2 g = GC2();
        GC2 c = GC2();
        
        c = g.getIt(c);
    }
}

How many objects are eligible for Garbage Collection?"
"Consider the following code snippet:

class GC3 {
    public static void main(String a[]) {
        String hello = new String(""Hello"");
        String anotherHello = new String(""Hello"");

        String world = new String(""World"");
        String anotherWorld = new String(""World"");

        hello = world + ""says"" + hello;
        world = anotherWorld + ""says"" + anotherHello;
    }
}

How many objects are eligible for Garbage Collection?"
"Consider the following code snippet:

class GC4 {
    public static void main(String a[]) {
        String hello = new String(""Hello"");
        String world = new String(""World"");

        // Line 1 
        // Line 2
    }
}

Which of the following code snippets when substituted for the above comment lines(line 1 and line2), will make the Strings ""Hello"" and ""World"" eligible for garbage collection? (Choose 2)"
"Consider the following code snippet:

class Thing { }

class GC5 {
    public static void main(String args[]) {
        Thing h = new Thing();
        Thing w = new Thing();

        h = new GC5().kill(h, w);
    }

    public Thing kill(Thing h, Thing w) {
        killSecondTime(h);
        killSecondTime(w);

        return w;
    }

    public void killSecondTime(Thing killable) {
        killable = null;
    }
}

How many objects are eligible for Garbage Collection? "
"Consider the following code snippet:

import java.util.*;

class Thing { }

class GC6 {
    public static void main(String args[]) {
        ArrayList a = new ArrayList();
        HashSet h = new HashSet();

        a.add(new Thing());
        
        h.add(new Thing());

        h.addAll(a);

        a = null;
    }
}

How many objects are eligible for Garbage Collection? "
"Consider the following code snippet:

class Lock1 {
    Lock1() { }
    Lock1(Lock2 lock2) { this.lock2 = lock2; }
    Lock2 lock2;
}

class Lock2 {
    Lock2() { }
    Lock2(Lock1 lock1) { this.lock1 = lock1; }
    Lock1 lock1;
}

class GC6 {
    public static void main(String args[]) {
        Lock1 l1 = new Lock1();
        Lock2 l2 = new Lock2(l1);
        l1.lock2 = l2;
    }
}

Which of the objects are eligible for garbage collection in the above code? "
"Consider the following code snippet:

class GC7 {
    public static void main(String args[]) {
        ArrayList a = new ArrayList();
        HashSet h = new HashSet();

        a.add(new String(""One""));
        a.add(new String(""Two""));
        a.add(new String(""Three""));
        a.add(new String(""Four""));

        h.add(new String(""Four""));
        h.add(new String(""Five""));
        h.add(new String(""Six""));
        h.add(new String(""Seven""));

        h.addAll(a);

        a = null;
    }
}

How many objects are eligible for Garbage Collection? "
"Consider the following code snippet:

class Node {
    Node node;

    public Node() {}
    public Node(Node node) { this.node = node;}
}

class NodeChain {
    public static void main(String a[]) {
        Node node1 = new Node();
        Node node2 = new Node(node1);
        Node node3 = new Node(node2);
        node1.node = node3;

        // Code Here
    }
}

Which of the following code snippets when replaced at the comment line (// Code Here) in the above code will make all the objects eligible for garbage collection?"
"Consider the following code snippet:

class Node {
    Node node;
}

class NodeChain {
    public static void main(String a[]) {
        Node node1 = new Node(); // Line 1
        node1.node = node1;
        // Code here
    }
}

Which of the following code snippets when replaced at the comment line (// Code Here) in the above code will make the object created at Line 1, eligible for garbage collection? (Choose 2)"
Which of the following are characteristics of Annotations?(Choose 2)
Which of the following are valid return types of an annotation member? (Choose 3)
Which of the following annotations are defined in java.lang.annotation package? (Choose 2)
Which of the following annotations are defined in java.lang package? (Choose 3)
Which of the following are true about Annotations?(Choose 3)
"Consider the following code snippet:

@interface Authors {
   String[] authors();
   String date();
   String[] reviewers();
}

Which of the following statements is true regarding the above code?"
What are the uses of Annotation? (Choose 3)
"Consider the following code snippet:

@interface Author {
    String name() default ""[xyz]"";
}

Which of the following are the correct ways of implementing the above declared annotation type? (Choose 2)"
"Consider the following code:

@interface Author {
    String name();
    String date();
}

Which of the following is the correct way of implementing the above declared annotation type?"
Which of the following annotations in Java makes sure that a method in the derived class overrides a method of its base class?
"Consider the following code snippet:

class MyClass {
    int myValue;

    @Override
    public boolean equals(Object o1, Object o2){
        MyClass mc1=(MyClass) o1;
        MyClass mc1=(MyClass) o2;
        if(mc1.myValue==mc2.myValue)
            return true;
        return false;
    }
}

what is the correct output of the above code snippet?"
Which of the following is the correct syntax for Annotation declaration?
Which of the following gives the exact relationship between Annotation Type and Annotation?
An Annotation Type ________________.
Which of the following are main packages for Annotations?(Choose 2) 
Which of the following gives the set of Annotations declared in java.lang package?
An Annotation type that does not have any member declaration is called as ____________.
"Consider the following Annotation Type Declaration:

public @interface House {
    String name();
    Date constructedDate();
}

Which of the following gives the error in the above declaration?"
To which of the following elements, annotations can be applied? (Choose 3)
Which of the following pre-defined annotations requires that an annotation type should itself annotate with, in order to make the information in an user-defined annotation type appear in Javadoc-generated documentation?
Which of the following are some of the enhancements made in JDK 1.6?(Choose 3)
Which of the following interfaces are newly added to the collection framework in JDK 1.6? (Choose 3)
Which of the following statements is true about NavigableSet interface?
Which of the following statements is true about NavigableMap interface?
Which of the following classes is new to JDK 1.6?
What are the new updations to java.io.File class in JDK 1.6?(Choose 2)
A Deque allows ___________________.
From JDK 1.6, which of the following interfaces is also implemented by java.util.LinkedList class?
From JDK 1.6, which of the following interfaces is also implemented by java.util.TreeSet class?
From JDK 1.6, which of the following interfaces is also implemented by java.util.TreeMap class?
Which of the following are true regarding Strings?(Choose 2)
"Consider the following code snippet: 

String deepak = ""Did Deepak see bees? Deepak did.""; 

Which of the following options will give the output for the method call deepak.charAt(10)?"
"Consider the following code snippet: 

String deepak = ""Did Deepak see bees? Deepak did.""; 

Which of the following method calls would refer to the letter b in the string referred by the variable deepak?"
"Consider the following code snippet:

String hi=""Hi"";
String mom=""mom"";

Which of the following are the valid ways to concatenate the above two Strings to get the String ""Himom""?"
Which of the following options gives the difference between == operator and equals() method?
State which of the following are default delimiters?(Choose 3)
Delimiters themselves be considered as tokens. State True or False. 
Which of the following are the rules that equals() and hashCode() must follow?(Choose 3)
Which of the following options give the advantages of String class over StringBuffer Class?(Choose 3)
Which of the following options are true for StringBuffer class?(choose 3)
"Consider the following code snippet:

String a = ""abc""; 

For the expression  a = ""\"""" + a + ""\""""
What will be the output of the above code snippet?"
"Consider the following code snippet:

String a = ""abc""; 

For the expression System.out.println(a.length() + a.startsWith(""a""));
What will be the output of the fabove code snippet?"
"Consider the following code snippet:

String a = ""abc""; 

For the expression System.out.println("">>""+a.length() + a.startsWith(""a""));
which of the following options will be the output?"
Which of the following statements are true regarding String Arrays?
Which of the following statements are legal declarations of String Arrays?
Which of the following statements are true about String Arrays?
"Consider the following code snippet:

String[] sArray = { ""abc"",""def"",""xyz"" };
sArray[2] = ""ijkl"";

Which of the following are true for the above given code?(Choose 2)"
Which of the following are true for Strings?(Choose 3)
Which of the following exhibits the different ways of constructing a String object?(Choose 3)
Which of the following are correct regarding HashCode?(Choose 2)
"Consider the following code snippet:

class TestString1 {
    public static void main(String args[]) {
        String t = ""test"";
        t.replace('t', 'd');
        StringBuffer sb = new StringBuffer(t);
        sb.reverse();
        System.out.println(t + sb);
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

class TestString2 {
    public static void main(String args[]) {
        String s1 = ""Test1"";
        String s2 = ""Test2"";

        s1.concat(s2);

        System.out.println(""""+s1.charAt(s1.length() - 3) + s1.indexOf(s2));
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

class TestString3 {
    public static void main(String args[]) {
        String s1 = ""Hello"";
        StringBuffer sb = new StringBuffer(s1);

        sb.reverse();
        s1.concat(sb.toString());

        System.out.println(s1 + sb + s1.length() + sb.length());
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

class TestString4 {
    public static void main(String args[]) {
        String s1 = ""Its Great"";
        String s2 = ""Its Tricky"";

        System.out.print(s1.concat(s2).length() + "" "");
        System.out.print(s1.concat(s2.substring(1, s1.length())).length());
    }
}

What will be the output of the following code snippet?"
"Consider the following code snippet:

import java.util.*;

class TestString5 {
    public static void main(String args[]) {
        String s = ""Get Entertained"";
        StringTokenizer st = new StringTokenizer(s, ""t"");
        while(st.hasMoreElements())
            System.out.print(st.nextToken());
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

public class TestString6 {
    public static void stringReplace (String text) {
        text = text.replace ('j' , 'i');
    }

    public static void bufferReplace (StringBuffer text) {
        text = text.append (""C"");
    }

    public static void main (String args[]) {
        String textString = new String (""test"");
        StringBuffer textBuffer = new StringBuffer (""test"");

        stringReplace (textString);
        bufferReplace (textBuffer);

        System.out.println (textString + textBuffer);
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

public class TestString7 {
  public static void main(String [] args) {
    String s1 = ""sing "";
    String s2 = ""sang "";
    s1 = s1.concat(""male "");
    String s3 = ""female "";
    s3.concat(""female "");
    System.out.println(s1 + s2 + s3);
  }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

public class TestString8 {
  public static void main(String [] args) {
    String d = ""java "";
    d += d;
    d += ""world of "";
    d.concat(""programming "");
    d.toUpperCase();
    System.out.println(d);  
  }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

public class TestString9 { 
  public static void main(String st[]){ 
    String s1 = ""java""; 
    String s2 = ""java""; 
    String s3 = ""JAVA""; 
    s2.toUpperCase(); 
    s3.toUpperCase(); 
    boolean b1 = s1==s2; 
    boolean b2 = s1==s3; 
    System.out.print(b1); 
    System.out.print("" ""+b2); 
  } 
} 

What will be the output of the above code snippet?"
"Consider the following code snippet:

public class TestString10{
  public void print() {
    String s = ""Hello"";
    StringBuffer sb = new StringBuffer(""Hello"");
    concatinateStrings(s, sb);
    System.out.println(s+"" ""+sb);
  }

  public void concatinateStrings(String str, StringBuffer strBuff){
    StringBuffer sk = strBuff;
    str = str + "" world"";
    sk.append("" world"");
  }

  public static void main (String[] args) {
    TestString10 t = new TestString10();
    t.print();
  }
}

What will be the output of the above code snippet?"
Which of the following are correct for Set interface?(Choose 2)
Which of the following are correct for List Interface?(Choose 2)
Which of the following options are valid ways to traverse the collection classes?(Choose 2)
Which of the following features are provided by the Iterator, which is not available in for-each construct?(Choose 2)
Which of the following is the best-performing implementation of Set interface?
"From a Collection object c, another Collection object needs to be created. It should contain the same elements in the same order as that of source object c, but with all duplicates eliminated.

Which of the following options provide the valid code to accomplish the above given scenario?"
"Consider s1 and s2 are sets.

Which of the following options gives the exact meaning of the method call s1.retainAll(s2)?"
Which of the following operations can a List interface perform?
Which of the following is the best performing List implementation?
"Consider a List based object L, with size of 10 elements e, and the following two lines of code:
L.add(""e"");
L.remove(""e"");

Which of the following options gives the status about the List object L after executing the above two lines of code?"
Which of the following gives the meaning of shuffle() method in Collections class?(choose 3)
Which of the following gives the difference between Queue interface and List?(Choose 2)
Which of the following options give the major differences between Map and Hashtable?(Choose 3)
Which of the following options define an entrySet in the Map interface?(Choose 2)
Which of the following options give the names of data structures that can be used for elements that have ordering, but no duplicates?
Which of the following options give the names of the data structures that can be used for Range-View operations, but no nulls?(choose 2)
Which of the following options give the names of the data structures that are best suited for reading 10 elements at a time from a collection and modifying the order and values?(Choose 2)
"Consider the following scenario:

A company keeps a record of all its employees. Every month, an employee will be chosen at random from these records to receive a free gift.

Which of the following core interfaces is best-suited for implementing the above scenario?"
"Consider the following scenario:

A company has decided that each new product will be named after an employee — but only first names will be used, and each name will be used only once. You have to prepare a list of unique first names. 

Which of the following core interfaces is best-suited for implementing the above given scenario?"
"Consider the following scenario:

A company decides that it only wants to use the most popular names for its products. You have to give the number of employees against each unique first name.

Which of the following four core interfaces is best-suited for implementing the above scenario?"
"Consider the following scenario:

A company acquires season tickets for the local cricket match, to be shared by employees. You need to create a waiting list for this popular sport.

Which of the following core interfaces is best-suited for implementing the above given scenario?"
"Consider the following code snippet:

public class SortMe {
    public static void main(String args[]) {
        SortedSet<StringBuffer> s = new TreeSet<StringBuffer>();
        s.add(new StringBuffer(""Red""));
        s.add(new StringBuffer(""White""));
        s.add(new StringBuffer(""Blue""));
        System.out.println(s.first());
    }
}

On running the above program it throws runtime error.

What could be the cause for the error?"
Which of the following are collection implementations, whose methods are internally synchronized (Thread-Safe)?(Choose 2)
Which of the following options are true about ArrayList and LinkedList?(choose 2)
Which of the following are true for WeakHashMap?(Choose 2)
Which of the following options will protect the underlying collections from getting modified?
Which of the following options are true about abstract implementations in Collections?(choose 3)
"Consider the following code snippet:

import java.util.*;

public class TestCol6 {
  public static void main(String args[] ){
    ArrayList a = new ArrayList(); // Line 1
    a.add(new Integer(10));
    a.add(new String(""Hello""));
    a.add(new Double(34.9));
  }
}

Which of the following code snippets when replaced at the line marked //Line 1, will make the ArrayList a to accept only Wrapper types of primitive numerics?"
"Consider the following code snippet:

import java.util.*;

public class TestCol1{
  public static void main(String argv[]){
    TestCol1 junk = new TestCol1();
    junk.sampleMap();
  }

  public void sampleMap(){
    TreeMap tm = new TreeMap();
    tm.put(""a"",""Hello"");
    tm.put(""b"",""Java"");
    tm.put(""c"",""World"");
    Iterator it = tm.keySet().iterator();
    while(it.hasNext()){
      System.out.print(tm.get(it.next()));
    }
  }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

import java.util.*;

public class TestCol2 {
  public static void main(String[] args) {
    Vector col = new Vector();
    col.add(new Integer(1));
    col.add(new Integer(""2""));
    col.add(new Float(3.2d));
    col.add(col.elementAt(1));
    col.setElementAt(col.elementAt(2),0);
    System.out.println(col);
  }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

import java.util.*;

public class TestCol3 {
  public static void main(String[] args) {
    List l = new ArrayList();
    l.add(""One"");
    l.add(""Two"");
    l.add(""Three"");
    l.add(""Four"");
    l.add(""One"");
    l.add(""Four"");

    Set h = new HashSet();
    h.addAll(l);

    System.out.println(""Size:"" + l.size() + h.size());
  }
}

What will be the output of the following code snippet?"
"Consider the following code snippet:

import java.util.*;
class Student {
  String studentName;
  Student() { }
  Student(String studentName) {
    this.studentName = studentName;
  }

  public String toString() {
    return this.studentName;
  }
}

public class TestCol7 {
  public static void main(String args[]){
    TreeSet students = new TreeSet();
    students.add(new Student(""Raju""));
    students.add(new Student(""Krishna""));
    students.add(new Student(""Vijay""));

    System.out.println(students);
  }
}

Running the above code, throws Runtime exception.

Which of the following options will make the code run properly?"
"Consider the following code snippet:

   class StockQuote {
     String stockSymbol;
     String companyName;
     double stockPrice;
   }

The instances of the above defined class holds the Stock information of various companies listed in Stock Exchange. These details needs to be maintained in a data structure, that 

 * allows searching of stock details using stockSymbol
 * gives alphabetical ordering of StockQuotes based on stockSymbol

Which of the following collection classes can be used to implement the above scenario?"
"Consider the following code:

import java.util.*;

class Arrays2List {
  public static void main(String args[]) {
    String numbers[] = { ""One"", ""Two"", ""Three"", ""Four"", ""Five"" };    

    // Line 1
    // Line 2

  }
}

Which one of the following options when substituted to //Line 1 and Line 2 converts the String array into ArrayList of Strings?"
"Consider the following code:

import java.util.*;

class Student implements // Code 1
{
    String studentName;
    Student() { }
    Student(String studentName) {
        this.studentName = studentName;
    }

    public String toString() {
        return this.studentName;
    }

    // Code 2

}

public class TestCol7 {
    public static void main(String args[]){
        ArrayList students = new ArrayList();
        students.add(new Student(""Olive""));
        students.add(new Student(""Veni""));
        students.add(new Student(""Krishna""));
        students.add(new Student(""Daniel""));
        students.add(new Student(""Elavarasan""));
        students.add(new Student(""Praveen""));

        Collections.sort(students); // Line 1

        System.out.println(students);
    }
}

Running the above code, throws Runtime exception at // Line 1

Which one of the following code snippets when substituted to the above code at the comment lines
(//Code 1 and //Code 2) will make the code run properly and print the names in alphabetical order?"
"Consider the following code snippet:

import java.util.*;

public class TestCol8{
  public static void main(String argv[]){
    TestCol8 junk = new TestCol8();
    junk.sampleMap();
  }

  public void sampleMap(){
    TreeMap tm = new TreeMap();
    tm.put(""a"",""Hello"");
    tm.put(""b"",""Java"");
    tm.put(""c"",""World"");
    Iterator it = tm.keySet().iterator();
    while(it.hasNext()){
      System.out.print(it.next());
    }
  }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

   class Student {
     String studentID;
     String studentName;
     double score;
   }

The instances of the above defined class holds the information of individual student. These details needs to be maintained in a data structure, that

 * allows searching of student details using studentID
 * ascending order of Student objects based on studentID

Which of the following collection classes can be used to implement the above scenario?"
"Consider the following scenario:

Scores in a Java Evaluation Test is stored in a TreeSet as follows:

import java.util.*;
class TopThreeScores {
  public static void main(String argv[]){
    Double scores[] = {new Double(59.4), new Double(74.3), new  Double(84.9), new Double(93.4), new Double(67.8), 
    new Double(54.9), new Double(66.0), new Double(83.2), new Double(95.3), new Double(79.7) };
    // Line 1
    // Line 2

    Collections.sort(l);
    for(int i=l.size()-1; i>l.size()-4; i--)
    System.out.print(l.get(i) + "" "");    
  }
}

Which of the following options when substituted for the commented lines (//Line 1 and //Line 2)in the above code will enable the program to display the top three scores?"
"Consider the following code snippet:

import java.util.*;

public class TestCol4 {
  public static void main(String[] args) {
    Set h = new HashSet();
    h.add(""One"");
    h.add(""Two"");
    h.add(""Three"");
    h.add(""Four"");
    h.add(""One"");
    h.add(""Four"");

    List l = new ArrayList();

    l.add(""One"");
    l.add(""Two"");
    l.add(""Three"");

    h.retainAll(l);

    System.out.println(""Size:"" + l.size() + h.size());
  }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

import java.util.*;
import java.text.*;

public class TestCol5 {
  public static void main(String[] args) {
    String dob = ""17/03/1981"";    
    // Insert Code here
  }
}

Which of the following code snippets, when substituted to (//Insert Code here) in the above program, will convert the dob from String to Date type?"
Which of the following class holds the list of registered drivers?
Which of the following are executed using the execute() method in Statement interface?(choose 2)
Which of the following are interfaces in JDBC API?(choose 3)
Which of the following is the immediate super interface of CallableStatement?
Which of the following is the type of driver for which Sun Microsystems provides the driver implementation?
Which of the following class in java.sql package maps the SQL data types to Java datatypes?
Which of the following are true regarding CallableStatement?(choose 2)
Which of the following classes is used to handle the abnormal situation that may occur during database calls using JDBC API?
Which of the following are true about SQLWarning class in JDBC API?
Which of the following interfaces is used to get information about the current database?
Which of the following are true about ResultSet?
Which of the following methods is used to check whether ResultSet object contains records?
Which of the following statements are true regarding ResultSet?
The return value of execute() method in Statement interface is __________________. 
Which of the following are valid syntax to create a Statement object that enables to create Scrollable ResultSet? (Assuming c is a Connection object)(Choose 2)
What of the following is the default Scroll type for a ResultSet object?
Which of the following interfaces is used to get the number of columns, names of columns and its types in a table?
Which of the following are true regarding PreparedStatement?(choose 3)
Which of the following is valid syntax to create a CallableStatement? (Assuming c is a Connection object)
Which of the following are true about java.sql.Date class?(choose 3)
Optional parameters are allowed in PreparedStatement. State True or False.
Which of the following types of driver provides maximum decoupling between database and Java application?
It is possible to create a table using JDBC API. State True or False.
ResultSet is a Client-side cursor. State True or False.
ResultSet programming is more efficient, where there are frequent insertions, updations and deletions. State True or False.
Parameterized Query using PreparedStatement is more efficient, where there are frequent insertions, updations and deletions. State True or False.
Both TYPE_SCROLL_SENSITIVE and TYPE_SCROLL_INSENSITIVE types ResultSets will make changes visible if they are closed and then reopened. State True or False.
Null can be used as value for the parameterized INSERT and UPDATE query. State True or False.
Which of the following ways can be used to access the String value in the first column of a ResultSet? (Assume rs is the ResultSet object) 
JDBC 2.0 API can handle BLOB and CLOB types. State True or False.
Which of the following listed features of Object Oriented Programming language ensures data security in a program?
Which of the following options are true about classes and objects in an Object Oriented Programming System?(Choose 2)
Which of the following options is true about multiple inheritance?
Which of the following options is true about multi-level inheritance?
Which of the following options gives the relationship between a Television Class and a Speaker Class?
Which of the following are true about inheritance?(Choose 3)
Which of the following is the process of creating a new class from an existing class?
The problem with Object Oriented Programming is that once a class is created it can never be changed. State True or False.
Data is secondary in Object Oriented Programming. State True or False.
In an Object Oriented system, if class A inherits its properties from class B, class A and B are known as ________ and ________ class, respectively.
Which of the following options gives the relationship between an Invoice Object and Line Items Objects in a Billing System?
Which of the following options gives the relationship between a Pilot class and Plane class?
Which of the following options gives the relationship between a Spreadsheet Object and Cell Objects?
"Consider the following scenario:

AZX Banking Corporation, intends to build a software system to computerize their process.

As a part of fact finding process, the following classes were identified.

Account - class to hold details about account holders
Transaction - class to hold details about the transactions made by the account holders
SavingsAccount - Specialised class to handle Savings Account
FixedAccount - Specialised class to handle Fixed Account

Which of the following gives the correct relationships between the above listed classes?"
Which of the following are true about Inheritance and Polymorphism?
Which of the following options give the pure approach to Object Oriented Programming?(Choose 3)
Which of the following options is true about the objects in an Object Oriented Programming?
"Consider the following scenario:

Real Chocos Private Limited deals in manufacturing variety of chocolates.
This organization manufactures three varieties of chocolates.

1. Fruit Chocolates
2. Rum Chocolates
3. Milk Chocolates

A software system needs to be built.

Which of the following options identifies the Classes and Objects?"
Which of the following are true about Object Oriented Programming?(choose 3)
Which of the following options are true about Associations?(choose 2)
"Consider the following scenario:

A Java application needs to stream a video from a movie file.

Which of the following options gives the correct combination of stream classes that can be used to implement the above requirement?"
"Consider the following scenario:

A Java application needs to split a file which is large in size, into smaller parts of equal size.

Which of the following options gives the most suitable combination of stream classes that can be used to implement the above requirement?"
"Consider the following scenario:

A given String needs to be searched, in text file, and report the number of occurences with corresponding line numbers.

Which of the following stream classes can be used to implement the above requirement?"
"Consider the following scenario:

A file contians 1000 bytes of data. The first 500 bytes of data needs to be swapped with the next 500 bytes of data within the same file.

Which of the following stream classes can be used to implement the above requirement?"
"Consider the following scenario:

Mr.Ram is working for a Software Company. He needs to save and reload objects from a Java application. For security reasons, the default Sun Microsystem's implementation of saving and loading of Java Objects is not used. He needs to write his own module for the same.

Which of the following options can be used to accomplish the above requirement?"
"Consider the following scenario:

A CAD application written in Java needs to save and load the drawings prepared using the application. The performance in saving and loading the drawing is the concerned issue.

Which of the following options gives the correct combination of stream classes that can accomplish the above requirement?"
"Consider the following scenario:

Mr.Vijay is working for a Software Company. He needs to save and reload objects from a Java application. He needs to write a module to accomplish the same.

Which of the following options can be used to accomplish the above requirement?"
"Consider the following scenario:

In a text editor application written in Java, two threads t1 and t2 are running to perform a particular task as follows:

Thread t1 - for reading the text from keyboard and filling it in a character array, and 
Thread t2 - for saving the text to a file by reading it from the same array.

The array object is synchronized among these two threads t1 and t2.

Which of the following options gives the correct combination of stream classes and the corresponding threads that uses them?"
"Consider the following scenario:

The 'File Copy' module of 'File System Management' java application needs to be implemented.

Which of the following options gives the most suitable combination of the the stream classes that can be used to implement the above given requirement?"
"Consider the following scenario:

An application needs to write a log file on the sequence of actions it takes while running.

Which of the following stream classes can be used to implement the above requirement?"
"Consider the following code snippet:

import java.io.*;

public class IOCode1 {
    public static void main(String args[]) throws IOException {        
        BufferedReader br1 = new BufferedReader(
                new InputStreamReader(System.in));
        BufferedWriter br2 = new BufferedWriter(
                new OutputStreamWriter(System.out));
        
        String line = null;
        while( (line = br1.readLine()) != null ) {
            br2.write(line);
            br2.flush();
        }
        br1.close();
        br2.close();
    }
}

What will be the output for the above code snippet?"
"Consider the following scenario:

A company maintains its employees details in the following format using text file 'employees.txt':

    EmployeeID <tab> EmployeeName <tab> BasicSalary <tab> Address <tab> PhoneNumber

Provided EmployeeID is int, BasicSalary is double, EmployeeName, Address and PhoneNumber are String type.

Which of the following options gives the correct combination of Input-Output Stream classes that can be used to manipulate the 'employees.txt' file?"
"Consider the following code snippet:

import java.io.*;

public class IOCode2 {
    public static void main(String args[]) throws FileNotFoundException {
        // Insert Code here
        System.out.println(""Welcome to File Programming"");
    }
}

Which of the following code snippets when substituted to the comment line (// Insert Code here), will redirect the output generated by the System.out.println() methods, in the above code?"
"Consider the following code snippet:

import java.io.*;

class Student {
    private String studentID;
    private String studentName;
    
    public Student() { }
    public Student(String studentID, String studentName) {
        this.studentID = studentID;
        this.studentName = studentName;
    }
    
    public String toString() { 
        return ""Student ID   : "" + studentID + ""\n"" + 
               ""Student Name : "" + studentName;
    }
}

public class IOCode3 {
    public static void main(String args[]) throws FileNotFoundException, IOException {
        ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(""C:/ObjectData""));  // Line 1
        out.writeObject(new Student(""100"", ""Student One""));  // Line 2
        out.close();
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

import java.io.*;

class Test implements Serializable {
    transient int a = 10;
    int b;
    
    public String toString() {
        return ""a = "" + a + "", "" + ""b = "" + b;
    }
}

public class IOCode4 {
    public static void main(String args[]) throws FileNotFoundException, IOException, ClassNotFoundException {
        ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(""C:/ObjectData""));
        Test t1 = new Test();
        t1.a = 20;
        t1.b = 30;
        out.writeObject(t1);
        out.close();
        
        ObjectInputStream in = new ObjectInputStream(new FileInputStream(""C:/ObjectData""));
        Test t2 = (Test) in.readObject();     // Line 1
        System.out.println(t2);
        in.close();
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

import java.io.*;

class Test {
    int a = 10;
}

class Test2 extends Test implements Serializable {
    int b;
    
    public String toString() {
        return ""a = "" + a + "", "" + ""b = "" + b;
    }    
}

public class IOCode5 {
    public static void main(String args[]) throws FileNotFoundException, IOException, ClassNotFoundException {
        ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(""C:/ObjectData""));
        Test2 t1 = new Test2();
        t1.a = 20;
        t1.b = 30;
        out.writeObject(t1);
        out.close();
        
        ObjectInputStream in = new ObjectInputStream(new FileInputStream(""C:/ObjectData""));
        Test2 t2 = (Test2) in.readObject();  // Line 1
        System.out.println(t2);
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

import java.io.*;

public class IOCode6 {
    public static void main(String args[]) throws FileNotFoundException, IOException, ClassNotFoundException {
        ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(""C:/ObjectData""));
        out.writeObject(new Serializable() { }); // Line 1
        out.close();
        ObjectInputStream in = new ObjectInputStream(new FileInputStream(""C:/ObjectData""));
        System.out.println(in.readObject()); // Line 2
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

import java.io.*;

class Test { }

class Test2 implements Serializable {
    int a;
    Test t;
    
    public String toString() {
        return ""a = "" + a;
    }
}

public class IOCode7 {
    public static void main(String args[]) throws FileNotFoundException, IOException, ClassNotFoundException {
        ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(""C:/ObjectData""));
        Test2 t1 = new Test2();
        t1.a = 10;
        t1.t = new Test();
        out.writeObject(t1); // Line 1
        out.close();
        ObjectInputStream in = new ObjectInputStream(new FileInputStream(""C:/ObjectData""));
        Test2 t2 = (Test2) in.readObject(); // Line 2
    }
}

What will be the output of the above code snippet?"
"Consider the following code snippet:

import java.io.*;

class Test { }

class Test2 implements Serializable {
    int a;
    Test t;
    
    public String toString() {
        return ""a = "" + a;
    }
}

public class IOCode8 {
    public static void main(String args[]) throws FileNotFoundException, IOException, ClassNotFoundException {
        ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(""C:/ObjectData""));
        Test2 t1 = new Test2();
        out.writeObject(t1); // Line 1
        out.close();
        ObjectInputStream in = new ObjectInputStream(new FileInputStream(""C:/ObjectData""));
        Test2 t2 = (Test2) in.readObject(); // Line 2
    }
}

What will be the output of the above code snippet?"
"Consider the following scenario:

A file downloading application written in Java, reads the source file from an URL, as five equal parts approximately. The total file size, the size of each part, starting and ending postion of each part, are known before the download starts. These five parts of the file being downloaded needs to be written to the downloading end as a single file at the corresponding positions as if it is in the source.

Which of the following classes will be suitable at the downloading end to implement the above scenario?"
Which of the following code snippets will get compiled without compilation error? (Choose 3)
"Consider there are two threads, ""Thread A"" and ""Thread B"". ""Thread A"" holds a lock on ""Object X"". ""Thread B"" is blocked inside a wait call on Object X. 

Which of the following will make the ""Thread B"" runnable?"
What happens if a thread cannot get the lock on an object?
Which of the following are true? (Choose 2)
Which of the following statements are true with respect to synchronization? (Choose 3)
Which of the following statement is true?
"Consider the following program:

class A extends Thread {
    private static B b = new B();
    private String s1;
    public void run() {System.out.print(b.m1(s1));}

    A(String threadName, String s1) {
       super(threadName);
       this.s1 = s1;
    }

    public static void main (String[] args) {
       A a = new A(""T1"",""A""), b = new A(""T2"",""B"");
       a.start(); b.start();
    }
}

class B {
  private String s1;
  public synchronized String m1(String s) {
    s1 = s;
    try {Thread.sleep(1);} catch (InterruptedException ie) {}
    return ""(""+Thread.currentThread().getName()+"",""+s1+"")"";
  }
}

What will be the output of the above program?"
"Consider the following program:

public class ThreadJoin extends Thread{
  public static void main(String[] args) {
    Thread t1 = new Thread(""T1"");
    Thread t2 = new Thread(""T2"");
    try {
      t1.join();
      t2.join();
    } catch (InterruptedException e) {
        System.out.println(""Main Thread interrupted."");
    }
   }

   public void run(){
     System.out.println(""Run executed"");
   }
}

What will be the output of the above program?"
Which of the following statements are true? (Choose 3)
"Consider the following program:

public class D extends Thread {
    public void run() {
        System.out.println(""Before start method"");
        this.stop();
        System.out.println(""After stop method"");
    }
      
    public static void main(String[] args) {
        D a = new D();
        a.start();
    }
}

What will be the output of the above program?"
"Consider the following program:

class A extends Thread {
  private int i;
  public void run() {i = 1;}
  public static void main(String[] args) {
    A a = new A();
    a.run();
    System.out.print(a.i);
  }
}

What will be the output of the above program?"
"Consider the following program:

class A extends Thread {
  private int i;
  public void run() {i = 1;}
  public static void main(String[] args) {
    A a = new A();
    a.start();
    System.out.print(a.i);
 }
}
What will be the output of the above program?"
"Consider the following program:

public class TThread implements Runnable {
  public void run() {
    try {
      Thread.sleep(100000);
    } catch (Exception objE) {
       System.out.println (""Exception Handler"");
    }    
    System.out.println (""Run method ends here"");
  }

  public static void main (String[] argv) {
    Thread thread = new Thread(new TThread ());
    thread.start();
    
    thread.interrupt();
    System.out.println (""Main method ends here"");
  }
}

What will be the output of the above program?"
"Consider the following program:

class TestThread extends Thread {
  public static void main(String apps[]) {
    Thread t = null;
    TestThread tc = new TestThread();
    for (int i =0;i<5;i++) {
        t = new Thread(tc);
        // Insert Code Here
    }
  }

  public void run() {
    System.out.println(""Hello"");
  }
}

Which of the following code when substituted to the commented line (//Insert Code) will make the program to execute properly?"
"Consider the following program:

class A extends Thread {
    public void run() {System.out.print(""A"");}
}

class B {
    public static void main (String[] args) {
        A a = new A();
        a.start();
        try {
            a.join();
        } catch (InterruptedException ie) {
            ie.printStackTrace();
        }
        a.start();
    }
}

What will be the output of the above program?"
"Consider the following scenario:

A common behaviour needs to be implemented, that should run concurrently in an application. The behaviour may be applicable to many classes in the application, that comes under various class hierarchy.

Which of the following gives the correct way of implementing the behaviour?"
"Consider the following scenario:

A thread t1, fills a common buffer area b in unequal intervals. The same buffer area is read by another thread t2 at regular intervals and used for further process. The buffer b is shared by t1 and t2. The application faces the problem that t2 reads the duplicate data and it starts reading and erasing the buffer before the thread t1 ends its task.

Which of the following options will solve the problem? (Choose 2)"
"Consider the following scenario:

Three threads are running concurrently, fetching the HTML pages from three differnet websites, to show them on three different windows.

Which of the following is true regarding the above scenario?"
"Consider the following scenario:

A window is splitted into four parts and each part is updated independently by four concurrent threads.

Which of the following is true regarding the above scenario?"
"Consider the following scenario:

A Chat application written in Java, currently works with a general room facility, where the messages posted by the logged user are displayed. A common synchronized object is ued to Queue up the messages received from the users.

Now, the application needs additional feature called personal messaging, that enables the user to make one-to-one communication.

Which of the following helps to implement the requirement?"
"Consider the following program:

class TClass {
    public void runThread() {
        Thread uThread = new Thread(this);
        if (uThread.isAlive()) {
            uThread.start();
            System.out.println(""Thread closed"");
        }
    }

    public static void main(String args[]) {
        TClass t = new TClass();
        t.runThread();
        System.out.println(""Program ends"");
    }

    public void run() { System.out.println(""Run executed""); }
}

Which of the following options will make the above program to compile and run properly? (Choose 2)"
"Consider the following program:

class A extends Thread {
  public A(Runnable r) {}
  public void run() {System.out.print(""A"");}
}

class B implements Runnable {
  public void run() {System.out.print(""B"");}
}

class C {
  public static void main(String[] args) {
    new A(new B()).start();
  }
}

What will be the output of the above program?"
"Consider the following program:

class A implements Runnable {
  public void run() {
    System.out.print(Thread.currentThread().getName());
  }
}

class B implements Runnable {
  public void run() {
    new A().run();
    new Thread(new A(),""T2"").run();
    new Thread(new A(),""T3"").start();
  }
}

class C {
  public static void main (String[] args) {
    new Thread(new B(),""T1"").start();
  }
}

What will be the output of the above program?"
"Consider the following program:

class AnException extends Exception {}

class A extends Thread {
  public void run() throws AnException {
    System.out.print(""A"");
    throw new AnException();
  }
}

class B {
  public static void main (String[] args) {
    A a = new A();
    a.start();
    System.out.print(""B"");
  }
}

What will be the output of the above program?"
"Consider the following program:

public class TestStart implements Runnable {
  boolean stoper = true;
  public void run() {
    System.out.println (""Run method Executed"");
  }

  public static void main (String[] argv) {
    TestStart objInt = new TestStart();
    Thread threadX = new Thread(objInt);
    threadX.start();
    threadX.start();
  }
}

What will be the output of the above program?"
"Consider the following program:

public class Exp3 {
    public static void main(String[] args) {
        try {
            if (args.length == 0) return;
            System.out.println(args[0]);
        } finally {
            System.out.println(""The end"");
        }
    }
}

Which of the following options are true regarding the output of the above program? (Choose 2)"
"Consider the following code:

public class Exp5 {
    public static void main(String args[]) {
        try { 
            int x = Integer.parseInt(""two""); 
        }
        // Insert code here
    }
}

Which of the following code snippets when substituted to the commented line (// Insert code here) create an appropriate catch block? (Choose 2)"
"Consider the following program:

public class Exp1 {
   static class A {
      void process() throws Exception { throw new Exception(); }
   }

   static class B extends A {
      void process() { System.out.println(""B""); }
   }

   public static void main(String[] args) {
      A a = new B();
      a.process();
   }
}

What will be the output of the above program?"
"Consider the following program:

public class MyClass {
    public static void main(String[] args) {
        RuntimeException re = null;
        throw re;
    }
}

What will be the output of the above program?"
"Consider the following scenario:

Here is part of the hierarchy of exceptions that may be thrown during file IO operations:

Exception
   +-- IOException
            +-- FileNotFoundException

You have a method X that is supposed to open a file by name and read data from it.
Given that X does not have any try-catch statements, which of the following option is true?"
Which of the following options are true? (Choose 3)
Which of the following is true?
Which of the following options are true? (Choose 2)
Which of the following statements are true? (Choose 2)
Which of the following options are true? (Choose 2)
"Consider the following scenario:

You are writing a set of classes related to cooking and have created your own exception hierarchy derived from java.lang.Exception as follows:

Exception
   +-- BadTasteException
          +-- BitterException
          +-- SourException

BadTasteException is defined as an abstract class. You have a method eatMe that may throw a BitterException or a SourException.

Which of the following method declarations are acceptable to the compiler? (Choose 3)"
"Consider the following program:

import java.text.*;

public class Exp2 {
    public float parseFloat (String s) {
        float f = 0.0f;
        try {
            f = Float.valueOf( s ).floatValue();
            return f ; 
        }
        catch(NumberFormatException nfe) {
            f = Float.NaN;
            return f; 
        }
        finally {
            f = 20.0f;
            return f;
        }
    }

    public static void main(String[] args) {
        System.out.println(new Exp2().parseFloat(""34.4""));
    }
}

What will be the output of the above program?"
"Consider the following program:

class RE {
   public static void main(String args[]) {
      try {
         String s = null;
         System.out.println(s.length());
      }
      catch(NullPointerException npe) {
         System.out.println(""NullPointerException handled"");
         throw new Exception(npe.getMessage());
      }
   }
}

What will be the output of the above program?"
"Consider the following program:

1.  class CheckedException extends RuntimeException { }
2.  class UncheckedException extends Exception { }
3.  public class Check {
4.     public static void main(String args[]) {
5.        generateException1();
6.        generateException2();
7.     }
8.  
9.     private static void generateException1() {
10.       throw new CheckedException();
11.    }
12. 
13.    private static void generateException2() {
14.       throw new UncheckedException();
15.    }
16. }

Which of the following is true regarding the above given program?"
"Consider the following scenario:

An user-defined exception is to be thrown from the database layer to the business logic layer, when something goes wrong.

Which of the following classes does a user-defined exception class should extend?"
Under which of the following scenarios a checked exception is thrown? (Choose 2)
Under which of the following scenarios an unchecked exception is thrown? (Choose 2)
"Consider the following code:

class ExceptionOne extends Exception { }

class ExceptionOneOne extends ExceptionOne { }

class ExceptionOneTwo extends ExceptionOne { }

class TestExp {
   public static void main(String args[]) {
      throwExceptions();
   }

   public static void throwExceptions() throws Exception {
      // Insert Code
   }
}

Which of the following code snippets when substituted to the commented line (// Insert Code) in the above program will make the program to compile and run properly? (Choose 3)"
"Consider the following program:

public class ExceptionType {
   public static void main(String args[]) {
      String s = null;
      try {
         System.out.println(s.length());
      }
      catch(Exception e) {
         System.out.println(""Exception 1"");
      }
      finally {
         try {
            generateException();
         }
         catch(Exception e) {
            System.out.println(""Exception 2"");
         }
      }
   }

   static void generateException() throws IllegalArgumentException {
      throw new IllegalArgumentException();
   }
}

Which of the following statements are true regarding the above given program? (Choose 3)"
"Consider the following program:

public class TestFinally {
   public static void main(String args[]) {
      try {
          throw new IllegalArgumentException();
      }
      catch(Exception e1) {
          System.out.println(""Exception 1"");
      }
      finally {
        String s = null;
        System.out.println(s.length());
        System.out.println(""Finally 1"");        
      }
      System.out.println(""End of Code"");
   }
}

What will be the output of the above program?"
"Consider the following program:

public class Exp4 {    
    static String s = ""smile!.."";
    public static void main(String[] args) {
        new Exp4().s1();
        System.out.println(s);
    }

    void s1() {
      try {
        s2();
      }
      catch (Exception e) {
        s += ""morning"";
      }
   }

   void s2() throws Exception {
       s3();
       s += ""evening"";
       s3();
       s += ""good"";
   }

   void s3() throws Exception {
        throw new Exception();
    }
}

What will be the output of the above program?"
"Consider the following program:

import java.io.*;
        
public class Exp6 {    
    public static void main(String argv[]) {
        Exp6 m=new Exp6();
        try {
            System.out.println(""Return value of m.amethod():""
                        +m.amethod());
        }
        catch (Exception e) {
            System.out.println(""Exception caught in main"");
        }
        System.out.println(""Done"");
    }

    public int amethod() throws IOException {
        FileInputStream is = null;
        try {
           is=new FileInputStream(""Hello.txt"");
           System.out.println(""Hello.txt exists"");
        }
        catch (FileNotFoundException fne) {
             System.out.println(""File not found"");
             return -1;
       }
       catch (IOException ioe) {
             System.out.println(""IOException caught"");
             return -2;
       }
       System.out.println(""Out of amethod"");
       return 1;
    }
}

What will be the output of the above program?"
"Consider the following program:

class one extends Exception{}
class two extends one{}
abstract class test {
   public void a() throws one{}
   public void b() throws one{}
}

public class Exp7 extends test {
    public void a() throws two {
                throw new two();
    }

    public void b() throws one {
        throw new two();
    }

    public static void main(String args[]) {
        try {
           Exp7 obj=new Exp7();
           obj.a();
        } catch(two t) {
             System.out.println(t.getClass());
        }catch(one o) {
             System.out.println(o);
        }catch(Exception e) {
             System.out.println(e);
        }
    }
}

What will be the output of the above program?"
"Consider the following program:

class joy extends Exception { }
class smile extends joy { }
interface happy {
    void a() throws smile;
    void z() throws smile;
}

class one extends Exception {  }
class two extends one {  }
abstract class test {
    public void a()throws one { }
    public void b() throws one { }
}

public class check extends test {
    public void a() throws smile {
        System.out.println(""welcome"");
        throw new smile();
    }

    public void b() throws one {
       throw new two();
    }

    public void z() throws smile {
       throw new smile();
    }
 
    public static void main(String args[]) {
        try {
           check obj=new check();
           obj.b();
           obj.a();
           obj.z();
        } catch(smile s) {
            System.out.println(s);
        }catch(two t) {
            System.out.println(t.getClass());
        }catch(one o) {
            System.out.println(o);
        }catch(Exception e) {
            System.out.println(e);
        }
    }
}

What will be the output of the above program?"
"Consider the following code:

import java.io.*;

class Super {
   Double getDouble() throws NumberFormatException { return new Double(4.0); }
}

class Sub extends Super {
   public static void main(String args[]) {
      Double d = null;
      try { d = new Sub().getDouble();
      } catch(Exception e) {
        d = new Double(8.0); }
      System.out.println(d);
   }
   // Insert code here
}

Which of the following code snippets when substituted at the commented line (// Insert code here) in the above program will make the program compile and produce the output 8? (Choose 3)"
"Consider the following program:

public class TryIt {
   public static void main(String args[]) {
      try {
         int i = 0;
         try {
            i = 100 / i;
         }
         catch(Error e) {
            System.out.println(""Divide by Zero error"");
         }
         System.out.println(""Error Handled"");
      }
      catch(Exception e) {
         System.out.println(""Unexpected exception caught"");
      }
   }
}

What will be the output of the above program?"
"Consider the following program:

class CatchableException extends Throwable { }

class ThrowableException extends CatchableException { }

public class ThrowCatchable {
   public static void main(String args[]) {
      try {
         tryThrowing();
      }
      catch(CatchableException c) {
         System.out.println(""Catchable caught"");
      }
      finally {
         tryCatching();
      }
   }

   static void tryThrowing() throws CatchableException {
      try {
         tryCatching();
         throw new ThrowableException();
      }
      catch(NullPointerException re) {
         throw re;
      }
   }

   static void tryCatching() {
      System.out.println(null + "" pointer exception"");
   }
}

What will be the output of the above program?"
"Consider the following program:

import java.io.*;

public class SteppedTryCatch {
   public static void main(String[] args) {
      try {
         try {
            try {
               // Line 1
            } catch(Exception e3) {
              System.out.println(""Exception 1"");
              // Line 2
            } 
         } catch(IOException e2) {
           System.out.println(""Exception 2"");
           // Line 3
         }
      } catch(FileNotFoundException e1) {
        System.out.println(""Exception 3"");
      }
   }
}

You need to make the above program to print the output as
Exception 1
Exception 2
Exception 3

Which of the following when substituted in place of commented lines (// Line 1, Line 2 and Line 3) produce the desired output?"
"Consider the following program:

import java.io.*;

public class CrypticCatch {
   public static void main(String[] args) throws Exception {
      try {
         try {
            try {
               throw new FileNotFoundException();
            } catch(Exception e3) {
              throw e3;
            } 
         } catch(IOException e2) {
           throw e2;
         }
      } catch(FileNotFoundException e1) {
        System.out.println(""File not found exception caught"");
      }
      System.out.println(""Exception handled successfully"");
   }
}

What will be the output of the above program?"
"Consider the following program:

class MyError extends Error { }
class YourError extends MyError { }
class HisError extends YourError { }

public class OurError {
   public static void main(String[] args) {
      try {
         throw getHisError();
      }
      catch(Error e) {
         System.out.println(e.getClass().getName());
      }
   }

   static Error getMyError() {
      throw new MyError();
   }

   static Error getYourError() {
      throw getMyError();
   }

   static Error getHisError() {
      throw getYourError();
   }
}

What will be the output of the above program?"
"Consider the following program:

public class SteppedFinally {
   static String exception = ""try "";
   public static void main(String args[]) {
      try {
         throw new Exception();
      } catch(Exception e) {
         try {
            try { throw new Exception();
            } catch(Exception ex) { exception += ""catch ""; }
            throw new Exception(); }
         catch(Exception x) { exception += ""finally ""; }
         finally { exception += ""throw ""; }
      } finally { exception += ""throws "";
      System.out.println(exception);
  } }
}

What will be the output of the above program?"
"Consider the following code:

class A {
   public void methodA() {
      // Line 1
   }
}

public class UseA {
   public static void main(String args[]) {
      try {
         A a = new A();
         a.methodA();
      }
      catch(Throwable t) {
          System.out.println(""Throwable caught"");
      }
   }
}

Which of the following code snippets when substituted to the commented line (// Line 1) in the above program? (Choose 2)"
"Consider the following program:

interface I {
   void m1() throws Exception;
}

class A implements I {
   // Line 1
   {
      System.out.println(""A: m1"");
   }
}

class B implements I {
   // Line 2
   {
      System.out.println(""B: m1"");
   }
}

class C implements I {
   // Line 3
   {
      System.out.println(""C: m1"");
   }
}

public class UseABC {
   public static void main(String args[]) throws Exception {
      I i[] = { new A(), new B(), new C() };
      for(I c : i) c.m1();
   }
}

Which of the following set of code snippets when replaced to the commented Lines (Line 1, Line 2 and Line 3) will make the program compile properly and produce the following output? (Choose 3)
A: m1
B: m1
C: m1"
"Consider the following program:

class UserDefinedException extends Error { }

public class TasteIt {
   public static void main(String args[]) {
      try {         
         try {
            throw new Error();
         }
         catch(UserDefinedException u1) {
            throw u1;
         }
         catch(Exception e1) {
            System.out.println(""This is the required output"");
         }
         finally {
            throw new UserDefinedException();
         }
      }      
      catch(UserDefinedException u2) {          
         System.out.println(""This is not the output""); 
      }
      catch(Error e2) {
         System.out.println(""This is the output"");
      }
   }
}

What will be the output for the above program?"
"Consider the following program:

public class PredictResult {
   public static void main(String args[]) {
      int k = 0;
      for(int i = 0; i < 5; i++) {
          for(int j = 0; j < 5; j++) {
              try {
                  try {
                      k = (i%2) / (j%2);
                      System.out.print(k + "" "");
                  }
                  catch(ArithmeticException ae) { j++; }
                  finally { i++; }
              }
              catch(Exception e) { i++; }
              finally { j++; }
          }
      }
   }
}

What will be the output of the above program?"
"Consider the following program:

class DataRunner implements Runnable {
   private int t;
   public DataRunner that;

   DataRunner() { }

   DataRunner(int t) { this.t = t; }

   public void run() {      
      try {
         System.out.println(""Locked"");
         that.wait(3000);
         that.notify();
         System.out.println(""Released"");
      } catch(InterruptedException e) { }      
   }
}

public class CryptThread {
    public static void main(String[] args) {
       DataRunner dr1 = new DataRunner(1);
       DataRunner dr2 = new DataRunner(2);
       dr1.that = dr2;
       dr2.that = dr1;
       new Thread(dr1).start();
       new Thread(dr2).start();
    }
}

Which of the following options suggests the valid changes to the above code,
in order to the get the below output
Locked
Locked
(wait for 3 seconds)
Released
Released"
"Consider the following code:

public class CK3 implements Runnable {
   public void run() {
      System.out.print(""running"");
   }

   public static void main(String[] args) {
      Thread t = new Thread(new CK3());
      t.run();
      t.run();
      t.start();
   }
}

Which of the following gives the valid output for the above code?"
"Consider the following code:

public class TH2 {
    public static synchronized void main(String[] args) throws
            InterruptedException {
        Thread t = new Thread();
        t.start();
        System.out.print(""keep"");
        t.wait(10000);
        System.out.print(“Smiling"");
    }
}

Which of the following gives the valid ouptut for the above code?"
"Consider the following code:

class MyThread extends Thread {
    MyThread(){ }
    MyThread(Runnable r) { super () ;}
    public void run() { System.out.print(“Inside thread”);}
}

class MyRunnable implements Runnable {
    public void run() { System.out.print(“Inside runnable”);}
}

class Test {
    public static void main(String[] args) {
        new MyThread().start();
        new MyThread(new MyRunnable()).start();
    }
}

Which of the following gives the correct output for the above code?"
"Consider the following code:

class MyThread extends Thread {
    MyThread() {
        System.out.print("" MyThread"");
    }
    public void run() { System.out.print("" queen""); }
    public void run(String s) { System.out.print("" jack""); }
}

public class TestThreads {
    public static void main (String [] args) {
        Thread t = new MyThread() {
            public void run() { System.out.print("" king""); }
        };
        t.start();
    }
}

Which of the followingl gives the correct valid output for the above code?"
Which of the following method informs the current thread to leave the control of the monitor?
"Consider the following scenario:
In a word processor program, there are two threads, one to read a file and the other to write to a file. The thread to read a file waits for the thread to write before performing its operation. ____________ arises when the thread to read a file, reads the file, before the thread to write to a file performs its operation.
Choose the correct answer from the following to fill in the blank."
"Consider the following Statements:
Statement A: Deadlock Condition: When two or more threads simultaneously access the same variable, at least one thread tries to write a value in this variable.As a result, the two threads become locked and the program fails. 
Statement B: Lock Starvation: Lock starvation occurs when the execution of a thread is postponed because of its low priority.  
Which of the following statements is true?"
"Consider the following Statements:
Statement A:The threads are scheduled using fixed priority scheduling.
Statement B:Thread priority can be set after it is created using the public int setPriority() method declared in the Thread class.
Which of the following statements is correct?"
A monitor called 'mon' has 5 threads in its waiting pool; all these waiting threads have the same priority. One of the threads is thread1. How can you notify thread1 so that  it alone moves from Waiting state to Ready State?
"Consider the following partial listing of the Widget class:

1. class Widget extends Thingee {
2.    static private int widgetCount = 0;
3.    static synchronized int addWidget() { widgetCount++;
4.        return widgetCount;
5.    }
6.    String wName;
7.    public Widget( int mx, String T  ) {
8.      wName = ""I am Widget #"" + addWidget();
9.    }
10.  // more methods follow
11. }
Which of the following gives the significance of the word ""private"" in line 2?"
"The following class definitions are in separate files. Note that the Widget and BigWidget classes are in different packages:

1. package conglomo;
2. public class Widget extends Object{
3.     private int myWidth;
4.     XXXXXX void setWidth( int n ) {
5.         myWidth = n;
6.     }
7. }

// the following is in a separate file and in separate package
8. package conglomo.widgets;
9. import conglomo.Widget ;
10. public class BigWidget extends Widget {
11.     BigWidget() {
12.        setWidth( 204 );
13.    }
14. }

Which of the following modifiers, used in line 4 instead of XXXXXX, would allow the BigWidget class to access the setWidth method (as in line 12)? (Choose 2)"
"Consider the following listing of the Widget class:

1. class Widget extends Thingee {
2.   static private int widgetCount = 0;
3.   public String wName;
4.   int wNumber;
5.
6.   private static synchronized int addWidget(){
7.      return ++widgetCount;
8.   }
9.   public Widget(){
10.     wNumber = addWidget();
11.   }
12. }

What happens when the class is compiled and use multiple Widget objects in a program that uses multiple Threads to create Widget objects?"
"Consider the following code:

In the following code methodA has an inner class
 1. public class Base {
 2.   private static final int ID = 3;
 3.   public String name;
 4.   public void methodA( int nn ){
 5.     final int serialN = 11;
 6.     class inner {
 7.       void showResult(){
 8.         System.out.println( ""Rslt= "" + XX );
 9.       }
10.     } // end class inner
11.     new inner().showResult();
12.   } // end methodA
13. )

Which of the following variables would the statement in line 8 be able to use in place of XX? (Choose 3)"
"Consider the following partial code:

class Fun {
   static void alpha() { /* more code here */ }
   void beta() { /* more code here */ }
}
Which of the following statements are correct regarding the above code?(Choose 3)"
"Consider the following code:

class One {
    public One() {
        System.out.print(1);
    }
}
class Two extends One {
     public Two() {
        System.out.print(2);
     }
}
class Three extends Two {
     public Three() {
        System.out.print(3);
     }
}
public class Numbers {
     public static void main(String[] argv) {
        new Three();
     }
}
Which of the following will be the output for the above program?"
"Consider the following code:
class A {
   private int counter = 0;
   public static int getInstanceCount() {
      return counter;
   }
   public A() {
      counter++;
   }
}
class B {
   public static void main(String args[]) {
      A a1 = new A();
      A a2 = new A();
      A a3 = new A();
      System.out.println(A.getInstanceCount());
   }
}
Which of the following will be the output for the above program?"
"Consider the following code:

class A {
    public void method(Object object) {
        System.out.println(""Object"");
    }
    public void method(String string) {
        System.out.println(""String"");
    }
    public static void main(String args[]) {
        new A().method(null);
    }
}
Which of the following options will be the output for the above code?"
"Consider the following code:

public class A {
   private int a;
   private A() { }
   private A(int a) {
      this.a = a;
   }
}
Which of the following statements are correct for the above defined class?(Choose 3)"
Which of the following statement is correct for the no-argument constructor provided by the compiler when no constructor is explicitly provided in the code?
"Consider the following code:

public class Code13 {   
    public static void main(String... args) {
        for(String s:args)
            System.out.print(s + "", "");
        System.out.println(args.length);
    }
}
Which of the following will be the output if the above code is attempted to compile and execute?"
Which of the following statements are true regarding variable arguments?(Choose 2)
"Consider the following code:

public class Code14 {    
    public static void print(int... x) {
        for(int i:x) System.out.print(i);
    }
     public static void print(int x[]) {
        for(int i:x) System.out.print(i);
    }
     public static void main(String... args) {
        int x[] = {1, 2, 3};        
        print(4, 5, 6);
        print(x);
    }            
}
Which of the following will be the output for the above code?"
"Consider the following code:

class Code15 {
   private void method() {
   }
}
class Code15_2 extends Code15 {
   public void method() {
   }
}
Which of the following statements are correct regarding the above code? (Choose 2)"
Which of the following statements are correct regarding Static Blocks?(Choose 3)
Which of the following statements are correct regarding Instance Block?(Choose 3)
"Consider the following:

Class A contains the following:

a. Instance Block
b. main() method
c. Static Block
d. Default Constructor of A

Assume an instance of class A is created in the main() method. Which of the following gives the correct sequence of execution of above mentioned elements?"
Which of the following options are not possible regarding static?(Choose 3)
Which of the following modifier can be applied to a constructor?
Which of the following modifiers cannot be used with the abstract modifier in a method declaration?(Choose 3)
"Consider the following code:

public class One {
    public One() {
        System.out.print(1);
    }
    class Two extends One {
        public Two() {
            System.out.print(2);
        }
    }
    public static void main(String[] argv) {
        new One(). new Two();
    }
}
Which of the following will be the output for the above program?"
"Consider the following code:

class A { }
class B extends A { }
public class Code1 {
    public void method(Object object) {
        System.out.println(""Object"");        
    }
    public void method(A b) {
        System.out.println(""A"");
    }
    public void method(B a) {
        System.out.println(""B"");
    }
    public static void main(String args[]) {
        new Code1().method(null);
    }
}
Which of the following will be the output for the above code?"
"Consider the following code:

class A { }
class B extends A { }
public class Code2 {   
    public void method(A a) {
        System.out.println(""A"");
    }
    public void method(B b) {
        System.out.println(""B"");
    }
    public static void main(String args[]) {
        new Code2().method(new Object());
    }
}
Which of the following will be the output for the above code?"
"Consider the following code:

class A { public String toString() { return ""A""; } }
class B extends A { public String toString() { return ""B""; } }
public class Code3 {   
    public void method(Object object) {
        System.out.println(object);
    }
    public static void main(String args[]) {
        new Code3().method(new B());
    }
}
Which of the following will be the output for the above code?"
"Consider the following code:

public class Code12 {   
    public void print(int... x) {
        System.out.print(x.length + "" "");        
        print2(x);
    }
    public void print2(int y[]) {
        for(int j=y.length/2; j<y.length; j++)
            System.out.print(y[j] + "" "");
        print3(y);
    }
    public void print3(int... z) {
        for(int k=0; k<z.length/2; k++)
            System.out.print(z[k] + "" "");        
    }
    public static void main(String args[]) {
        Code12 c = new Code12();
        c.print(19, 48, 3, 4, 58, 67, 34);
    }
}
Which of the following will be the output for the above code?"
"Consider the following code:

public class Code16 {
    static {
        System.out.print(""Planet "");
    }
    public static void main(String... args) {

    }
    static {
        System.out.print(""Welcome "");
    }
}
Which of the following  will be the valid output for the above code?"
"Consider the following code:

public class Code17 {
    public static void main(String args[]) {
        new Code17();
    }
    {
        System.out.print(""Planet "");
    }
    {
        System.out.print(""Welcome "");
    }
}
Which of the following will be the valid output for the above code?"
"Consider the following code:

public class Code18 {
    {
        System.out.print(""Planet "");
    }
    {
        System.out.print(""Welcome "");
    }
    
    public static void main(String... args) {
        new Code18();
    }
    Code18() { System.out.print(""Welcome ""); }
    
    static {
        System.out.print(""Green "");
    }    
}
Which of the following will be the valid output for the above code?"
"Consider the following code:

public class SayWelcome {    
    public SayWelcome() {
        System.out.println(""Planet"");        
    }
    
    public void SayWelcome() {
        System.out.println(""Welcome"");
    }
    
    public static void main(String[] args) {
        new SayWelcome().SayWelcome();
    }            
}
Which of the following will be the output of the above code?"
"Consider the following code:

/* CodeOne.java */
package packageone;
public class CodeOne {
    public static String repeat(String s) { return s + s; }
}
/* CodeTwo.java */
package packagetwo;
// Insert code here
public class CodeTwo {
    public static void main(String args[]) {
        System.out.println(repeat(""test""));
    }
}
Which of the following code snippet when replaced to the above comment line (// Insert code here) will print the output as 'testtest'?"
"Consider the following code:

1   public class A {
2     public void m1() {System.out.print(""A.m1, "");}
3     protected void m2() {System.out.print(""A.m2, "");}
4     private void m3() {System.out.print(""A.m3, "");}
5     void m4() {System.out.print(""A.m4, "");}
6
7     public static void main(String[] args) {
8       A a = new A();
9       a.m1();
10      a.m2();
11      a.m3();
12      a.m4();
13    }
14  }

Which of the following gives the lines that need to be removed in order to compile and run the above code correctly?"
"Consider the following code:

package com.java.test;
public class A {
  public void m1() {System.out.print(""A.m1, "");}
  protected void m2() {System.out.print(""A.m2, "");}
  private void m3() {System.out.print(""A.m3, "");}
  void m4() {System.out.print(""A.m4, "");}
}

class B {
  public static void main(String[] args) {
    A a = new A();
    a.m1();  // 1
    a.m2();  // 2
    a.m3();  // 3
    a.m4();  // 4
  }
}
Assume that both of the above classes are stored in a single source file called 'A.java'. Which of the following gives the valid output of the above code?"
"Consider the following:

Given that a method scale defined as follows, where scalex and scaley are identifiers of type int

public Point scale( int x, int y ) {
    return new Point(
     (int)(x/scalex),(int)(y/scaley));
}

What will happen when the method scale() is called with double primitives instead of int as in the following code fragment?

1. public static void main(String args[]) {
2.    double px = 10.02;
3.    double py = 20.34;
4.    Point thePoint = scale( px, py );
5. }"
"Consider the following code:

public class Key1 {
   public boolean testAns( String ans, int n ) {
        boolean rslt;
        
        if (ans.equalsIgnoreCase(""YES"") & n > 5) 
            rslt = true;        
        
        return rslt;
   }
   
   public static void main(String args[]) {
        System.out.println(new Key1().testAns(""no"", 5));
   }
}

Which of the following will be the output of the above program?"
"Consider the following code:

class ArrayTest {
  public static void main(String[] args) {
    int[][] a1 = {{1,2,3},{4,5,6},{7,8,9,10}};
    System.out.print(a1[0][2]+"",""+a1[1][0]+"",""+a1[2][1]);
}}

Which of the following gives the output of the above code?"
"Consider the following code:

class ArrayTest2 {
  public static void main(String[] args) {
    int[] a1 = new int[];                   // 1
    int a2[] = new int[5];                 // 2
    int[] a3 = new int[]{1,2};            // 3
    int []a4 = {1,2};                        // 4
    int[] a5 = new int[5]{1,2,3,4,5};  // 5
  }
}

Which of the following gives the lines in the above code that generates a compile time error?"
Which of the following modifier cannot be applied to the declaration of a field (member of a class)?
"Consider the following code:

class Class2 {
  public int a;
  public static int b;

  public static void main (String[] in) {
    Class2 r1 = new Class2(), r2 = new Class2();
    r1.a++; r1.b++;
    System.out.print(r1.a+"", ""+r1.b+"", ""+r2.a+"", ""+r2.b);
  }
}

Which of the following  gives the valid output for the above code?"
"Consider the following code:

public class ExampleOne {
    public static void main(String args[]){  
        System.out.println(21 & 11);
    }
} 

Which of the following gives the valid output for above?"
At which of the following given situations, unit tests are required to be run on the modules?(Choose 3)
"Consider the following code segment:

public class ExampleTwo {
    public static void main(String args[]) {
        int z = 8;
        z += --z;
        System.out.println(""Value of z : "" + z);
    }
}

Which of the following gives the valid output for above?"
"Consider the following code segment:

public class ExampleThree {
    public static void main(String args[]) {
        int i = 1;        // Line 1
        short s = 1;   // Line 2
        long l = 1;     // Line 3
        i = l + i;        // Line 4
        l = s + i;       // Line 5
    }
}

Which of the following gives the line in the above program that will result in error?"
"Consider the following:

Given that a class Test, declares a member variable named 'Scores' as an array of int as follows:

    int Scores[];

Which of the following code fragments would correctly initialize the member variable Scores as an array of 4 int with the value of zero, if used in the constructor? (Choose 2)"
"Consider the following code:

1. public class EqualsTest {
2.   public static void main( String args[] ) {
3.     float A = 1.0F / 3.0F;
4.     if( ( A * 3.0) == 1.0F ) System.out.println( ""Equal"" );
5.     else System.out.println( ""Not Equal"" );
6.   }
7. }

Which of the following will be the output of the above program?"
"Given the following method in an application:

1. public String setFileType( String fname ){
2.    int p = fname.indexOf( '.' );
3.    if( p > 0 ) fname = fname.substring( 0,p );
4.    fname += "".TXT"";
5.    return fname;
6. }

and given that another part of the class has the following code

7.  String TheFile = ""Program.java"";
8.  File F = new File( setFileType( TheFile ) );
9.  System.out.println( ""Created "" + TheFile );

Which of the following will be the output for the statement in line 9?"
"Consider the following code:

1. class Example extends Object {
2.   public void  Increment( Integer N ){
3.     N = new Integer(  N.intValue() + 1 );
4.   }
5.   public void Result( int  x ) {
6.     Integer X = new Integer( x );
7.     Increment( X );
8.     System.out.println( ""New value is "" + X );
9.    }
10. }

What will be the output, when the method Result() is called with a value 30?"
"Consider the following code:

class ABC {
   public void method1() {
      DEF def = new DEF();
      def.method2();
   }
}

class DEF {
   public XYZ xyz;

   public String method2() {
      return xyz.method3();
   }
}

class XYZ {
   public String value;

   public String method3() {
      value = ""XYZ"";
      return value;
   }
}

class TestCode {
   public static void main(String args[]) {
      ABC abc = new ABC();
      abc.method1();
   }
}

Which of the following will be the output if the above code is compiled and executed?"
"Consider the following code:

import java.util.*;

public class Code10 {
    {
        final Vector v;
        v=new Vector();
    }

    public Code10() { }

    public void codeMethod() {
        System.out.println(v.isEmpty());
    }

    public static void main(String args[]) {
        new Code10().codeMethod();
    }
}

Which of the following  will be the output for the above code?"
"Consider the following code:

public class ExampleFour {
    public static void main(String[] args) {
        byte b = 0;
        int i = 2501;
        b = (byte) i;
        System.out.println(b);
    }
}

Which of the following gives the valid output for above?"
"Consider the following code:

public class TestOne {
    public static void main(String args[]) {
        byte x = 3;
        byte y = 5;
        System.out.print((y%x) + "", "");
        System.out.println(y == ((y/x) *x +(y%x)));
     }
}

Which of the following gives the valid output for above?"
"Consider the following code:

public class TestTwo {
    public static void main(String argv[]) {
       TestTwo obj = new TestTwo();
        obj.amethod();
    }

    public void amethod() {
        int i = 012;
        System.out.println(i);
    }
}

Which of the following gives the valid output for above?"
Which of the following  gives the correct sequence of execution of callback methods in a JUnit TestCase?
"Consider the following code:

public class Code4 {   
    private int second = first;
    private int first = 1000;
    
    public static void main(String args[]) {
        System.out.println(new Code4().second);
    }
}

Which of the following  will be the output for the above code?"
"Consider the following code:

public class Code5 {
    private int second = getFirst();
    private int first = 6000;
    
    private int getFirst() {
        return first;
    }
    
    public static void main(String args[]) {
        System.out.println(new Code5().second);
    }
}

Which of the following  will be the output for the above code?"
"Consider the following code:

public class Code6 {
    public static void main(String args[]) {
        byte b = 10;
        short s = 20;
        int i = 30;
        
        b = b + s;
        s = s + i;
        i = i + b;        

        System.out.println(""b = "" + b);
        System.out.println(""s = "" + s);
        System.out.println(""i = "" + i);
    }
}

Which of the following will be the output for the above given code?"
"Consider the following code:

public class Code7 {
    public static void main(String args[]) {
        char character = -1;
        System.out.println(character);
    }
}

Which of the following  will be the output for the above program?"
"Consider the following code:

public class Code8 {
    private final int x = 10;
    private byte y = x;
    
    public static void main(String args[]) {
        Code8 t = new Code8();
        System.out.println(t.x);
        System.out.println(t.y);
    }
}

Which of the following will be the output for the above given program?"
"Consider the following code:

public class Code9 {    
    public static void main(String args[]) {        
        System.out.println(Math.abs(Integer.MIN_VALUE));
    }
}

Which of the following will be the output for the above given program?"
"Consider the following code:

import java.util.*;

public class Code11 {
    final Vector v; 
    
    {
        v=new Vector();
    }

    public Code11() { }

    public void codeMethod() {
        System.out.println(v.isEmpty());
    }

    public static void main(String args[]) {
        new Code11().codeMethod();
    }
}

Which of the following  will be the output for the above code?"
"Consider the following code:

class AT1 {
  public static void main (String[] args) {
    byte[] a = new byte[1]; long[] b = new long[1];
    float[] c = new float[1]; Object[] d = new Object[1];
    System.out.print(a[0]+"",""+b[0]+"",""+c[0]+"",""+d[0]);
  }
}

Which of the following  will be the output of the above code?"
"Consider the following code:

1.  class Test {
2.     public static void main(String args[]) {
3.          double d = 12.3;
4.          Dec dec = new Dec();
5.          dec.dec(d);
6.          System.out.println(d);
7.     }
8.  }
9.  class Dec{
10.   public void dec(double d) { d = d - 2.0d; }
11. }

Which of the following gives the correct value printed at line 6?"
"Consider the following code:

class ExampleFive {
    public static void main(String[] args) {
        final int i = 22;
        byte b = i;
        System.out.println(i + "", "" + b);
    }
}

Which of the following gives the valid output for the above code?"
"Consider the following code:

class UT1 {
  static byte m1() {
    final char c = 'u0001';
    return c;
  }

  static byte m3(final char c) {return c;}

  public static void main(String[] args) {
    char c = 'u0003';
    System.out.print(""""+m1()+m3(c));
  }
}

Which of the following gives the valid output of the above code?"
"Consider the following code:

1. class ExampleSix {
2.     String msg = ""Type is "";
3.     public void showType(int n) {
4.         String tmp;
5.         if(n > 0) tmp = ""positive"";
6.         System.out.println(msg + tmp);
7.     }
8. }

On running the above code it throws the compile-time error-  the variable tmp is not initialised.

Which of the following changes to the above code will make the code to compile properly? (Choose 3)"
"Consider the following code:

 public class GetArray {
   public static void main(String args[]) {
     float invt[][];
     float[] prct, grts[];
     float[][] sms, hms[];
     (// Insert statement1 here)
     (// Insert statement2 here)
     (// Insert statement3 here)
   }
 }

Which of the following listed statements can be inserted at the above commented lines 
(// Insert statement1 here, // Insert statement2 here, // Insert statement3 here) 
to make the program to compile without errors? (Choose 3)"
"Consider the following code:

 1. public class MyClass {
 2.    public static double getPay(float p) {
 3.      return (p * 4.2);
 4.    }
 5.
 6.    public static void main(String [] args) {
 7.      int y = 10;
 8.      if ((getPay(2.2) <= y) || (getPay(3.1) <= y))
 9.        System.out.println(""Yes"");
10.      else
11.        System.out.println(""No"");
12.    }
13.  }

Which of the following gives the valid output for above?"
Which of the following is the correct expression that evaluates to true if the number x is between 1 and 100 or the number is negative?
"Consider the following code:

1. public class Cast {
2. 
3.     public static void main(String[] args) {
4. 
5.         int[] x = {5, 10, 15};
6.         Object obj = x;
7.         x = obj;
8.     }
9. }

Which of the following gives the valid output for the above code?"
"Consider the following code:

 1.  public class GetArray2 {
 2.    public static void main(String [] args) {
 3.      int [][] holdit = new int[6][];
 4.      for(int x = 0;x<6;x++) {
 5.        holdit[x] = new int[3];
 6.        holdit[x][0] = (x + 0);
 7.        holdit[x][1] = (x + 1);
 8.        holdit[x][2] = (x + 2);
 9.        System.out.println(holdit[x][0]+"" ""+holdit[x][1]+"" ""+holdit[x][2]);
10.      }
11.    }
12.  }

Which of the following gives the valid output for above?"
"Consider the following code:

public class Test1 { 
   public static void main(String[] args) {
     xMethod(new double[]{3, 3});
     xMethod(new double[5]);
     xMethod(new double[3]{1, 2, 3});
   }

   public static void xMethod(double[] a) { 
     System.out.println(a.length);
   }
}

Which of the following statement is true regarding the above code?"
Which of the following statements are valid 3 dimensional character array creations?(Choose 2)
"Consider the following code:

1. public class Garment {
2.     public enum Color {
3.         RED(0xff0000), GREEN(0x00ff00), BLUE(0x0000ff);
4.         private final int rgb;
5.         Color( int rgb) { this.rgb = rgb; }
6.         public int getRGB() { return rgb; }
7.     };
8.     public static void main( String[] argv) {
9.         // insert code here
10.    }
11.}

Which of the following code snippets, when inserted independently at line 9, allow the Garment class to compile? (Choose 2)"
"Consider the following code fragment:

switch( x ) {
   case 100:
     System.out.println( ""One hundred"" ); break;
   case 200:
     System.out.println( ""Two hundred"" ); break;
   case 300:
     System.out.println( ""Three hundred"" ); break;
}

Which of the following declarations of x that will not cause a compiler error? (Choose 3)"
"Consider the following code:

class Planet { }

class Earth extends Planet { }

public class WelcomePlanet {
  public static void welcomePlanet(Planet planet) {
    if (planet instanceof Earth) {
       System.out.println(""Welcome!"");
    } else if (planet instanceof Planet) {
       System.out.println(""Planet!"");
    } else {
       System.exit(0);
    }
  }

  public static void main(String args[]) {
    WelcomePlanet wp = new WelcomePlanet();
    Planet planet = new Earth();
    welcomePlanet(planet);    
  }
}

Which of the following will be the output of the above program?"
Which of the following options can break a loop? (Choose 3)
Which of the following does not have an equivalent Wrapper class? (Choose 2)
"All kinds of looping constructs designed using while loop can also be constructed using do-while loop. 
State True or False."
For which of the following scenarios, the enhanced for-each can be used? (Choose 2)
Which of the following flow control features does Java support? (Choose 2)
Which of the following are the valid ways of creating wrapper type objects? (Choose 3)
Which of the following are the valid ways of conversion from Wrapper type to primitive type? (Choose 3)
Which of the following statements return a primitive type?(Choose 2)
"Consider the following code:

1.  public class Boxer1{
2.     Integer i;
3.     int x;
4.
5.     public Boxer1(int y) {
6.        x = i+y;
7.        System.out.println(x);
8.     }
9.
10.    public static void main(String[] args) {
11.       new Boxer1(new Integer(4));
12.    }
13. }

Which of the following will be the output of the above program?"
"Consider the following code:

public class SwitchCase {
    public static void main(String args[]) {
        int x = 10;
        switch(x) {
            case 10: System.out.println(""10"");
            case 10: System.out.println(""10"");
            case 20: System.out.println(""20"");
            default: System.out.println(""30"");
        }                
    }
}

Which of the following will be the output for the above program?"
"Consider the following code:

public class LabeledBreak1 {
    public static void main(String args[]) {
loop:
        for(int i=0; i<10; i++) {
            System.out.print(i + "" "");
            if(i == 5) break loop;
        }
    }
}

Which of the following will be the output for the above code?"
"Consider the following code:

public class LabeledBreak2 {
    public static void main(String args[]) {
loop:
    for(int j=0; j<2; j++) {
            for(int i=0; i<10; i++) {
                if(i == 5) break loop;
                System.out.print(i + "" "");
            }
        }
    }
}

Which of the following will be the output for the above code?"
"Consider the following code:

public class Code19 {
   public static void main(String args[]) {
      int[] x = {10, 20, 30, 40, 50, 60};
      // Insert code here
      System.out.print(y + "" "");}
   }
}

Which of the following code snippet when replaced in the above comment line (// Insert code here) will give the output 10 20 30 40 50 60?"
"Consider the following code:

public class LabeledBreak3 {
    int iTime=7;
    public static void main(String argv[]) {
        LabeledBreak3 t = new LabeledBreak3();
        t.calc(10);
    }

    public void calc(int iTime) {
    start:
        for(int i = 0; i < 2; i++) {
            if(i > 1) {
                break start;
                System.out.println(iTime);
            }
            System.out.print(i);
            System.out.print(iTime);
        }
    }
}

Which of the following  gives the valid output for the above code?"
"Consider the following code:

 1.  public class SwitchIt {
 2.    public static void main(String[] args) {
 3.      int w1 = 1;
 4.      int w2 = 2;
 5.      System.out.println(getW1W2(w1, w2));
 6.    }
 7.  
 8.    public static int getW1W2(int x, int y) {
 9.      switch (x) {
10.        case 1: x = x + y;
11.        case 2: x = x + y;
12.      }
13.      return x;
14.    }
15.  }

Which of the following gives the valid output of above code?"
"Consider the following code:

public class Example {
     public static void main(String[] args) {
         Byte b = 10;
         Short s = Short.valueOf( (b + 1) );
         Integer i = s + 1;
         Long l = Long.valueOf( (i + 1) );
         System.out.println(l);
     }
}

Which of the following gives the valid output of the above code?"
"Consider the following code:

public class ExampleSeven {
   public static void main(String [] args) {
      String[] y = new String[1];
      String x = ""hello"";
      y[0] = x;

      // Code here  
        System.out.println(""match"");
      } else {
        System.out.println(""no match"");
      }
   }
}

Which of the following code snippet when substituted at the commented line (// Code here) in the above code will make the program to print ""no match""?"
"Consider the following code:

public class Example {
   public static void main(String[] args) {
      Byte b = 100;
      Short s = XXXXX;
      Long l = s;
      Integer i = l;
      System.out.println(l);
   }
}

Which of the following given code snippet when substituted for ( XXXXX ) in the above code will give the output as 103 ?"
"Consider the following code:

public class SwitchIt {
    public static void main(String args[]) {
        int x = 10;
        
        switch(x) {
            case 10:
                for(int i=0; i<x; ++i)
                break;
                
            case 20:
                System.out.println(x);
                break;
                
            case 30:
                System.out.println(x*2);
                break;
                
            default:
                System.out.println(x*3);
        }                
    }
}

Which of the following will be the output for the above program?"
"Consider the following code:

public class WrapIt {
   public static void main(String[] args) {
      new WrapIt().testC('a');
   }

   public void testC(char ch) {
      Integer ss = new Integer(ch);
      Character cc = new Character(ch);
      if(ss.equals(cc)) System.out.print(""equals "");
      if(ss.intValue()==cc.charValue()) {
         System.out.println(""EQ"");
      }
   }
}

Which of the following gives the valid output for the above code?"
"Consider the following code:

public class FixIt {
   public static void main(String[] args) {
      int p0 = 3;
      int p1 = 3;

      // Code here
      case(0):
          System.out.println(""I have it."");
          break;
      case(1):
          System.out.println(""You have it."");
         break;
      case(2):
          System.out.println(""We have it."");
          break;
      default:
          System.out.println(""They have it."");
      }
   }
}

Which of the following code snippet when substituted at the commented line (// Code here) will make the above program to print 'They have it.'?"
"Consider the following code:

 1. public class DagRag {
 2.    public static void main(String [] args) {
 3.
 4.      int [][] x = new int[2][4];
 5.  
 6.      for(int y = 0; y < 2; y++) {
 7.        for(int z = 0; z < 4; z++) {
 8.          x[y][z] = z;
 9.        }
10.      }
11.
12.      dg: for(int g = 0; g < 2; g++) {
13.        rg:  for(int h = 0; h < 4; h++) {
14.          System.out.println(x[g][h]);
15.
16.        }
17.        System.out.println(""The end."");
18.
19.      }
20.  
21.    }
22.  }

Which of the following code snippet when inserted at lines 15 and 18 respectively, will make the above program to generate the below output?

0
1
2
3
The end."
"Consider the following code:

 1. public class SprtOne {
 2.    public static void main(String [] args) {
 3.      int m = 25;
 4.      while(m > 10) {
 5.        if ((m / 2) > 10) {
 6.          System.out.println(m + "" - Not there yet"");
 7.        }
 8.        else {
 9.          System.out.println(m + "" - it's there"");
10.        }
11.        m--;
12.      }
13.      System.out.println(m + "" Finished"");
14.    }
15.  }

Which of the following option is a valid comment on the output of the above code?"
"Consider the following code:

 1. public class DartCo {
 2.    public void getDart(int x) {
 3.      int cnt = 0;
 4.      do {
 5.        if (cnt == 0) {
 6.          System.out.println(""Welcome!"");
 7.        }
 8.        else {
 9.          System.out.println(x);
10.          x++;
11.        }
12.        cnt++;
13.      } while (cnt < 15);
14.    }
15.  
16.    public static void main(String [] args) {
17.      DartCo dc = new DartCo();
18.      dc.getDart(25);
19.    }
20.  }

Which of the following gives the value of x at line 9 when the value of cnt equals to 14?"
"Consider the following code:

public class ManTin {
  public static void main(String [] args) {
    int j = 2, y = 3, z = 10;
    for (;j < 6;j++) {
      y = (++y + z++);
      System.out.println(y+z);
    }
  }
}

Which of the following gives the valid output for the above code?"
"Consider the following code:

int count = 0;
while (count < 100) {
   // Point A
   System.out.println(""Welcome to Java!"");
   count++;
   // Point B
}
   // Point C

Which of the following given statements are true regarding the above given code?(Choose 2)"
"Consider the following code snippet:

public class Test { 
     public static void main (String args[]) {
         int i = 0;
         for (i = 0; i < 10; i++);
               System.out.println(i + 4);
     }
} 

Which of the following statements are true regarding the above code? (Choose 2)"
"Consider the following code snippet:

outer: 
   for (int i = 1; i < 10; i++) {
   inner:
     for (int j = 1; j < 10; j++) {
       if (i * j > 50) 
         continue outer;

       System.out.println(i * j);
     }
   } 

next:

Which of the following given statement is valid, after the continue outer statement is executed in the above code?"
"Consider the following code:

package com.java.test;
public class A {
    public int x;
    public static int y;
}

package com.java.test1;
import com.java.test.A;
public class B {
    public static void main(String[] args) {
       A a = new A(), b = new A(); 
       a.x++;
       b.y++;
       System.out.print(a.x + "" "" + a.y + "" "" + b.x + "" "" + b.y); 
   }
}

Which of the following gives the correct output for the above code?"
"Consider the following code:

package com.java.test;
public class A {
    public int x;    
    public static int y;
    protected static int z;
} 

package com.java.test1;
import com.java.test.A;
public class B {
   public static void main(String[] args) {
      A a = new A(), b = new A(); 
      a.x++; 
      b.y++;
      a.z++;
      System.out.print(a.x + "" "" + a.y + "" "" + b.x + "" "" + b.y + "" "" a.z); 
   }
}

Which of the following gives the correct output for the above code?"
"Consider the following code:

public class Trial {
    public static void main(String argc[]) {
       Trial tr = new Trial();
       tr.amethod(tr);
   }

   public void amethod(Trial tr) {
         int i=99;
         multi(tr);
         System.out.println(i);
   }

   public void multi(Trial tr) {
         tr.i = tr.i*2;
   }
}

Which of the following gives the valid output for the above given code?"
"Consider the following code :
 class Value{
   public int i = 15;
}

public class Test{
     public static void main(String argv[]){
          Test t = new Test();
           t.first();
     }

     public void first(){
        int i = 5;
        Value v = new Value();
        v.i = 25;
        second(v, i);
        System.out.println(v.i);
     }

     public void second(Value v, int i) {
         i = 0;
         v.i = 20;
         Value val = new Value();
         v =  val;
         System.out.println(v.i + "" "" + i);
    }
}

Which of the following gives the correct output for the above code?"
"Consider the following code:

public class Pass {
    static int j=20;
    public static void main(String argv[]) {
        int i=10;
        Pass p = new Pass();
        p.amethod(i);
        System.out.println(i);
        System.out.println(j);
    }

    public void amethod(int x) {
       x=x*2;
        j=j*2;
    }
}

Which of the following gives the correct output for the above code?"
"Consider the following code:

public class ObParam{
    public int b = 20;
    
    public static void main(String argv[]){
        ObParam o = new ObParam();
        methodA(o);
    }

    public static void methodA(ObParam a) {
        a.b++;
        System.out.println(a.b);
        methodB(a);
        System.out.println(a.b);
    }

    public void methodB(ObParam b) {
        b.b--;
    }
}

Which of the following gives the correct output for the above code?"
"Consider the following class definition:

class InOut{
    String s= new String(""Between"");
    public void amethod(final int iArgs){
        int iam;
        class Bicycle{
            public void sayHello(){
               ...Line 1
            }
        }//End of bicycle class
    }//End of amethod

    public void another(){
        int iOther;
   }
}

Which of the following statements would be correct to be coded at ...Line 1? (Choose 2)"
"Consider the following code:

class Test {
    Test(int i) {
         System.out.println(""Test("" + i +"")"");
     }
 }

 public class Question{
      static Test  t1 = new Test(1);
      Test   t2 = new Test(2);
      static Test  t3 = new Test(3);
      public static void main(String[] args){
          Question Q = new Question();
      }
 }                                                                                                                                                                                                         Which of the following options gives the correct order of initialization?"
Which of the following statements are true about instantiating an inner class? (Choose 2)
Which of the following code snippets show valid inheritance? (Choose 3)
"Anonymous class can have their own members. 
State True or False."
Which of the following statements are true about has-a and is-a relationships? (Choose 2)
"Consider the following code:

public class Welcome {
    String title;
    int value;
    public Welcome() {
        title += "" Planet"";
    }
 
    public Welcome(int value) {
        this.value = value;
        title = ""Welcome"";
        Welcome();
    }
    
    public static void main(String args[]) {
        Welcome t = new Welcome();
        System.out.println(t.title);
    }
}

Which of the following options will be the output for the above program?"
"Consider the following code:

package test;

class Target {
   String name = ""hello"";
}

Which of the following options are valid that can directly access and change the value of the variable 'name' in the above code? (Choose 2)"
Which of the following statements are true regarding inner classes? (Choose 3)
"Consider the following code:

class Base {
   protected static int product(int a, int b) { return a * b;}
}

public class Derived extends Base {
   public static int product(int a, int b) {
      int c = super.product(a, b);
      return c;
   }

   public static void main(String args[]) {
      Derived d = new Derived();
      System.out.println(d.product(3, 4));
      System.out.println(Derived.product(2, 2));
   }
}

Which of the following option will be the output of the above program?"
"Consider the following code:

public abstract class Shape {
   private int x;
   private int y;

   public abstract void draw();

   public void setAnchor(int x, int y) {
      this.x = x;
      this.y = y;
   }
}

Which of the following implementations use the Shape class correctly? (Choose 2)"
"Anonymous inner class can extend a class and implement an interface at the same time.
State True or False."
"Consider the following code:

abstract class BaseTest extends Object implements Runnable {
    public void run() { }
}

class AdvancedTest extends BaseTest { }

public class TestIt {
   public boolean checkTest( Object obj ) {
      return ( obj instanceof BaseTest ) & ( obj instanceof Runnable );
   }

   public static void main(String args[]) {
      System.out.println(new TestIt().checkTest(new AdvancedTest()));
      System.out.println(new TestIt().checkTest(new Thread()));
   }
}

Which of the following option will be the output for the above program?"
"Given the following object hierarchy and code for the upgrade method:

java.lang.Object
    +----mypkg.BaseWidget
              |
              +----TypeAWidget

// the following is a method in the BaseWidget class
1. public TypeAWidget upgrade( ){
2.    TypeAWidget  A = (TypeAWidget)  this;
3.    return A;
4. }

Which of the following will be the result of the below statements?

5.  BaseWidget B = new BaseWidget();
6.  TypeAWidget A =  B.upgrade();"
"Consider the following code:

public class Demo extends Object {
  String Title;

  public Demo( String t ){
     Title = t;
  }

  public void showTitle() {
     System.out.println( ""Title is "" + Title );
  }
}

class DerivedDemo extends Demo {
   public void setTitle( String  tt )  { Title = tt ; }
}

public class TasteIt {
   public static void main(String args[]) {
      DerivedDemo dd = new DerivedDemo();
      dd.showTitle();
   }
}

Which of the following option will be the output for the above program?"
"Consider the following scenario:

The GenericFruit class defines the following method to return a float value:

    public float calories( float serving ) {
       // code goes here
    }

A junior programmer writing the Apple class, which extends GenericFruit, proposes to define the following overriding method:

    public double calories( double serving ) {
       // code goes here
    }

Which of the following statement is true regarding the above scenario?"
"Consider the following code:

public class Welcome {
    String title;
    int value;
    
    public Welcome() {
        title += "" Planet"";
    }
 
    public void Welcome() {
        System.out.println(title + "" "" + value);
    }
    
    public Welcome(int value) {
        this.value = value;
        title = ""Welcome"";
        Welcome();
    }
    
    public static void main(String args[]) {
        Welcome t = new Welcome(5);        
    }
}

Which of the following option will be the output for the above program?"
Which of the following statements are true about polymorphism? (Choose 2)
"Consider the following code:

abstract class AOne {
    abstract void x();
    void y() { }
}

class BTwo extends AOne {
    void x() { }
    void y() { }
}

class CThree extends BTwo {
    void z() { }
}

AOne a = new BTwo();
CThree b = new CThree();
AOne c = new CThree();

Based on the above class definitions and objects a, b and c, which of the following code fragments are valid polymorphic method calls? (Choose 3)"
"Consider the following code:

interface InterfaceA {
   String toString();
}

public class TestInterfaceA {
   public static void main(String[] args) {
      System.out.println(new InterfaceA() {
         public String toString() {
            return ""test"";
         }
      });
   }
}

Which of the following option will be the output of the above given code?"
"Consider the following code:

class One {
  void method2() { }
}

class Two extends One {
   // insert method here
}

Which of the following code snippets, when inserted individually at the commented line (// insert method here), will correctly complete class Two? (Choose 3)"
"Consider the following code:

public class TasteIt{
   public void show() {
       System.out.println(""one"");
   }
   public static void main(String[] args) {
      TasteIt t = new TasteIt() {
          public void show() {              
              System.out.println(""two"");
              super.show();
          }
      };
      t.show();      
   }
}

Which of the following option will be the output for the above program?"
"Consider the following scenario:

You are designing an application to recommend dog breeds to potential pet owners. To maximize the advantage of working in an object-oriented language, you have created a Dog class, which will be extended by classes representing different kinds of dogs. The following code fragment shows the class declaration and all of the instance variables in the Dog class:

1. public class Dog extends Object {
2.   float avgWeight;
3.   float avgLifespan;
4.   String breedName;
5. }

Which of the following option will be a reasonable variable declaration for the SportingDog class, which extends Dog?"
"Consider the following code:

class First {
   First(String s) { }
   First() { }
}

class Second extends First {
    Second() { }
    Second(String s) { super(s); }
    void zap(){
        // Insert code here
    }
}

Which of the following code snippets when substituted individually to the above commented line (// Insert code here) will create an anonymous inner class from within class Second? (Choose 2)"
"Consider the following partial code:

public class CreditCard {
   private String cardID;
   private Integer limit;
   public String ownerName;

   public void setCardInformation(String cardID, String ownerName, Integer limit) {
      this.cardID = cardID;
      this.ownerName = ownerName;
      this.limit = limit;
   }
}

Which of the following statement is true regarding the above given code?"
"Consider the following code:

interface Things {
   public static final int SIMPLE = 3;
   void work(int t);
}

public class TestThings implements Things {
   public static void main(String [] args) {
      int x = 5;
      new TestThings().work(++x);
   }

   public void work(int s) {
      s += SIMPLE + ++s;
      System.out.println(""w "" + s);
   }
}

Which of the following option will be the output of the above given code?"
"Consider the following code:

interface Data { public void load(); }

abstract class Info { public abstract void load(); }

Which of the following implementation correctly uses the Data interface and Info class?"
"Consider the following code:

interface Greek { }

class Alpha implements Greek { }

class Beta extends Alpha {}

class Delta extends Beta {
   public static void main( String[] args ) {
      Beta x = new Beta();
      // insert code here
   }
}

Which of the following code snippet when inserted individual at the commented line (// insert code here), will cause a java.lang.ClassCastException?"
"Consider the following code:

public class GoTest {
   public static void main(String[] args) {
      One one = new One(); one.talk();
      Two two = new Two(); two.talk();
      Talkable talkable = new Three();
      talkable.talk();
   }
}

class One {
   public void talk() {
      System.out.println(""one"");
   }
}

class Two extends One {
   public void talk() {
      System.out.println(""two"");
   }
}

class Three extends Two implements Talkable { }

interface Talkable {
   void talk();
}

Which of the following option will be the output of the above given code?"
"Consider the following code:

interface i1 {
   int i = 0;
}

interface i2 {
    int i = 0;
}

class inter implements i1, i2 {   
    public static void main(String[] a) {
        System.out.println(i);
    }
}

Which of the following options will be the output for the above code?"
"Consider the following scenario:

You are writing a toolkit of classes in the 'secure' package to be used by other programmers in your company. Because of security considerations, you do not want other programmers to subclass your VitalDataAccess class, but you will have to provide for access by classes in other packages. 

Which of the following class declaration would accomplish the above scenario?"
"Consider the following code:

class Animal { 
   public String noise() { return ""noise""; } 
}

class Dog extends Animal {
   public String noise() { return ""bark""; }
}

class Cat extends Animal {
   public String noise() { return ""meow""; }
}

class MakeNoise {
   public static void main(String args[]) {
      Animal animal = new Dog();
      Cat cat = (Cat)animal;
      System.out.println(cat.noise());
   }
}

Which of the following will be the output if the above code is compiled and executed?"
"Consider the following code:

class A {
    public A getMe() {
        return this;
    }
}

class B extends A {
    public static void main(String args[]) {
        A a = new B() {
            public A getMe() {
                return this;
            }
        };
        System.out.println(a.getClass().getSuperclass().getName());
    }
}

Which of the following will be the output of the above given code?"
"Consider the following code:

1.  public class Circle1 {
2.     private String string = ""String1"";
3.     void work() {
4.         String x = ""String2"";
5.         class Circle2 {
6.             public void peepOut() {
7.                 System.out.println(string);
8.                 System.out.println(x);
9.             }
10.        }
11.        new Circle2().peepOut();
12.    }
13.    
14.    public static void main(String args[]) {
15.        Circle1 c1 = new Circle1();
16.        c1.work();
17.    }
18. }

Which of the following changes made to the above code will make the code to compile and execute properly and gives the following output?

   String1
   String2"
"Consider the following code:

class Cake {
    void eat() {
        Cream c = new Cream();
        c.taste(new Flavour() {
            public void essence() {
                System.out.println(""Vanilla"");
            }
        });
    }
}

interface Flavour {
    // Code 1
}

class Cream {
    // Code 2
}

public class TasteIt {
    public static void main(String args[]) {
        Cake cake = new Cake();
        cake.eat();
    }
}

Which of the following code snippet when substituted to the commented lines (// Code 1 and // Code 2) will make the code compile properly and gives the output 'Vanilla'?"
"Consider the following code:

public class Choco {
    Choco() { System.out.print(""Choco""); }
    class Bar {
        Bar() { System.out.print(""bar""); }
        public void go() { System.out.print(""sweet""); }
    }
    
    public static void main(String[] args) {
        Choco c = new Choco();
        c.makeBar();
    }
    void makeBar(){
        // Insert code here
    }
}

Which of the following code snippet when substituted individually to the above commented line (// Insert code here) will give the following output?

    Chocobarsweet
"
"Consider the following code:

interface Equalizer {
    boolean equals(Object o1, Object o2);
}

public class EqualIt {
    String name;
    public EqualIt(String name) {
        this.name = name;
    }
    
    public void TestIt() {
        System.out.println(
            new Equalizer() {
                public boolean equals(Object o1, Object o2) {
                    return o1.equals(o2);
                }
            }.equals(this, this)
        );
    }
    public static void main(String[] args) {
        new EqualIt(""Welcome Planet"").TestIt();
    }
}

Which of the following will be the output of the above code?"
"Consider the following code:

interface InterfaceOne {
    int ID = 10;
    int getAccess();
}

interface InterfaceTwo {
    int ID = 20;
    int getAccess();
}

class InterfaceImpl implements InterfaceOne, InterfaceTwo {
    public int getAccess() {
        if (this instanceof InterfaceOne) {
            return InterfaceOne.ID;
        } else {
            return InterfaceTwo.ID;
        } 
    }
}

public class Code {
    public static void main(String args[]) {
        InterfaceOne i1 = new InterfaceImpl();        
        System.out.println(i1.getAccess());
        
        InterfaceTwo i2 = (InterfaceTwo) i1;        
        System.out.println(i2.getAccess());
    }
}

Which of the following option will be the output for the above code?"
"Consider the following code:

class One {
   public One method() { return this; }
}

class Two extends One {
   public One method() { return this; }
}

class Three extends Two {
   // Insert code here
}

Which of the following code snippets when inserted individually at the commented line (// Insert code here), will make the class Three complete? (Choose 2)"
"Consider the following partial code:

interface A { public int getValue(); }
 
 class B implements A {
    public int getValue() { return 1; }
 }
 
 class C extends B {
    // insert code here
 }

Which of the following code fragments, when inserted individually at the commented line (// insert code here), makes use of polymorphism? (Choose 3)"
"Consider the following code:

class A is defined in packageone as follows:

package com.packageone;
public class A {
    private int x;
    
    A(int x){
        this();
        this.x = x;
    }
    
    abstract void print();
}

And class B is defined in packagetwo as follows:

package com.packagetwo;
import com.packageone.A;
class B extends A {
    B(int x) {
        super(x);        
    }
    
    void print() {
        System.out.println(x);
    }
}

class C {
    public static void main(String args[]) {
        A a = new B(10);
        
    }
}

Which of the following changes will make the code to run properly? (Choose 3)"
"Consider the following code:

class Alpha {
    protected Beta b;
}

class Gamma extends Alpha { }

class Beta { }

Which of the following statement is true?"
"Consider the following code:

class Parent {
    static int z = 2;
    Parent(int y) { this(); z = z * 2; }
    Parent() { z++; }
}

class Child extends Parent {
    Child() { super(z); z = z + 3; }
    public static void main(String args[]) {
        new Child();
        System.out.println(z);
    }
}

Which of the following will be the output for the above code?"
"Consider the following partial code:

interface Number {
    Number method();
}

interface One extends Number {
    One method();
}

class NumberImplementor implements One {    
   // implementation
}

Which of the following ways of implementation will make the above class NumberImplementor to compile properly?"
"Consider the following partial code:

abstract class OuterClass {
    abstract void outerClassMethod();
    static interface InnerInterface {
        void innerInterfaceMethod();
    }
}

class TasteIt extends OuterClass implements OuterClass.InnerInterface {
    void outerClassMethod() {
        System.out.println(""OuterClassMethod"");
    }
    public void innerInterfaceMethod() {
        System.out.println(""InnerInterfaceMethod"");
    }    
    public static void main(String args[]) {
        TasteIt t = new TasteIt();        
        // Insert Code Here      
    }
}

Which of the following code snippets when inserted individually to the above commented line (// Insert Code Here) will compile and execute correctly? (Choose 2)"
"Consider the following partial code:

class Bean {
    interface I {
        void beanInterface();
    }    
    class BeanI extends Bean implements I { }
}

public class BeanImpl {
    public static void main(String args[]) {
        Bean bean = new Bean();
        Bean.BeanI beanI = bean. new BeanI();
        beanI.beanInterface();
    }
}

Which of the following changes made to the class Bean without changing the class BeanImpl, will make the above code to compile properly?"
"Consider the following partial code:

interface IBean {
    class BeanI implements IBean { }
    void print();
}

public class BeanImpl extends IBean.BeanI {
    public void print() { }
    public static void main(String args[]) {
        IBean iBean = new BeanImpl();
        iBean.print();
    }
}

Which of the following changes made to IBean interface, without affecting BeanImpl class will make the above code to compile properly?"
"Consider the following code:

interface First {
    int part();
}

public class Alpha {
   class A implements First {
      public int part() { return 1; }
   }

   public int firstpart(First first) { return first.part(); }

   public void testFirst() {
      class A implements First {
         public int part() { return 2; }
      }

      System.out.println(firstpart(new A()));
   }

   public static void main(String args[]) {
      new Alpha().testFirst();
   }
}

Which of the following will be the output for the above code?"
"Consider the following code:

class Component {
   private int param;
   public void setParam(int param) { this.param = param; }
   public int getParam() { return param; }
}

class Container {
   private Component component;
   public void setComponent(Component component) { this.component = component; }
   public Component getComponent() { return component; }
}

public class TestContainerComponent {
   public static void main(String args[]) {
      Container container = new Container();
      Component component = new Component();

      int j = 10;
      component.setParam(j);
      container.setComponent(component);

      // Insert code here
      System.out.println(container.getComponent().getParam());
   }
}

Which of the following code snippets when individually repalced at the commented line (// Insert code here) in the above code will produce the output 100? (Choose 3)"
"Consider the following code:

interface InterfaceFirst {
    int ID = 10;
    void show();
}

interface InterfaceSecond extends InterfaceFirst {
    int ID = 20;
    void show();
}

class Implementation implements InterfaceSecond {
    public void show() {
        System.out.println(""ID:"" + ID);
    }
}

public class TestImplementation {
    public static void main(String args[]) {
        InterfaceSecond i2 = new Implementation();
        i2.show();
        InterfaceFirst i1 = i2;
        i1.show();
    }
}

Which of the following will be the output for the above code?"
"Consider the following code:

interface A { void x(); }

class B implements A { public void x() {} public void y() {} }

class C extends B { public void x() {} }

class D {
   public static void main(String args[]) {
      java.util.List<A> list = new java.util.ArrayList<A>();
      list.add(new B());
      list.add(new C());
      for (A a : list) {
         a.x();
         a.y();
      }
   }
}

Which of the following will be the output of the above program?"
"Consider the following code:

abstract class Director {
    protected String name;

    Director(String name) {
        this.name = name;
    }
    abstract void occupation();
}

class FilmDirector extends Director {
    FilmDirector(String name) {
        super(name);
    }

    void occupation() {
        System.out.println(""Director "" + name + "" directs films"");
    }
}

public class TestDirector {
    public static void main(String[] args) {
        FilmDirector fd = new FilmDirector(""Manirathnam"");
        fd.occupation();
        new Director(""Manirathnam"") {
            void occupation() {
                System.out.println(""Director "" + name + "" also produces films"");
            }
        }.occupation();
    }
}

Which of the following will be the output for the above code?"
"Consider the following code:

public class Except {
    private void method1() throws Exception {
        throw new RuntimeException();
    }

    public void method2() {
        try {
            method1();
        } catch (RuntimeException e) {
            System.out.println(""Caught Exception"");
        } catch (Exception e) {
            System.out.println(""Caught Runtime Exception"");
        }
    }

    public static void main(String args[]) {
        Except e = new Except();
        e.method2();
    }
}

Which of the following gives the correct output for the above code?"
"Consider the following code:

public class ThrowsException {
    static void throwMethod() {
        System.out.println(""Inside throwMethod."");
        throw new IllegalAccessException(""exception"");
    }
  
    public static void main(String args[]) {
        try {
            throwMethod();
        }
        catch (IllegalAccessException e) {
            System.out.println(""Caught "" + e);
        }
    }
}

Which of the following gives the output for the above given code?"
"Consider the following code :

class Hello extends Thread {
    public void run() {System.out.print(""A"");}
}

class Welcome {
    public static void main (String[] args) {
        Hello a = new Hello();
        a.start(); //1
        try {
            a.join();
        } catch (InterruptedException ie) {
            ie.printStackTrace();
        }
        a.start(); //2
    }
}

Assume that the start() at //2 is invoked before completion of the run() method.
Which of the following  will be the output for the above code?"
"Consider the following code:

public class ExceptionTest extends RuntimeException {
   private ExceptionTest exception() {
      // Code 1
   }

   private ExceptionTest exceptionTestMethod() {
      // Code 2
   }

   public void callExceptionTestMethod() {
      try {
         exceptionTestMethod();
      }
      catch(Exception e) {
         System.out.println(""Exception"");
      }
   }

   public static void main(String args[]) {
      new ExceptionTest().callExceptionTestMethod();
   }
}

Which of the following give the valid combinations of Code 1 and Code 2, when substituted to the above commented lines (//Code 1 and //Code 2), makes the code to give the output 'Exception'? (Choose 3)"
"Consider the following code:

import java.io.IOException;

public class ExceptQuest {
    public ExceptQuest() throws IOException {
        throw new IOException();
    }
}

Assume that the definition of ExtendedExceptQuest begins with the line 

     public class ExtendedExceptQuest extends ExceptQuest

It is required that none of the constructors of ExtendedExceptQuest should throw any checked exception

Which of the following can give a solution for the above scenario?"
"Consider the following code:

public class UnwiseThreads implements Runnable { 
    public void run() {
        while(true) { }
    }

    public static void main(String args[]) {
        UnwiseThreads ut1 = new UnwiseThreads();
        UnwiseThreads ut2 = new UnwiseThreads();
        UnwiseThreads ut3 = new UnwiseThreads(); 
        ut1.run();
        ut2.run();          
        ut3.run();
    }
}

Which of the following  is correct for the above given program?"
"Consider the following code:

public class InterruptThread {
    public static void main(String args[]) {
        try {
            Thread.currentThread().sleep(1000);
            Thread.currentThread().interrupt();
        }
        catch(InterruptedException ie1) {
            try {
                System.out.println(""Interrupted1"");
                Thread.currentThread().interrupt();
                Thread.currentThread().sleep(500);
            }
            catch(InterruptedException ie2) {
                System.out.println(""Interrupted2"");
            }
        }
        finally {
            try {
                Thread.currentThread().sleep(500);
            }
            catch(InterruptedException ie3) {
                System.out.println(""Interrupted3"");
            }
        }
    }
}

Which of the following  will be the valid output for the above given program?"
"Consider the following code:

class Resource1 { }
class Resource2 { }
class ResourceConsumer extends Thread {
    Resource1 res1;
    Resource2 res2;    
    ResourceConsumer(Resource1 res1, Resource2 res2) {
        this.res1 = res1;
        this.res2 = res2;
    }    
    
    public void run() {
        try {
            synchronized(res1) {                
                System.out.println(""Planet"");
                res1.wait(1000);
                System.out.println(""Earth"");
                res2.notify();
                System.out.println(""Welcome"");
            }
        } catch(InterruptedException ie) { }
    }
}

public class NeverEnding {
    public static void main(String[] args) {
        ResourceConsumer rc1 = new ResourceConsumer(
                new Resource1(), new Resource2());
        rc1.start();
    }
}

Which of the following gives the valid output for the above given code?"
"Consider the following code:

class Resource { }
class UserThread extends Thread {
    public Resource res;
    public void run() {
        try {
            synchronized(res) {
                System.out.println(""Planet"");
                res.wait();                
                Thread.sleep(1000);
                res.notify();
                System.out.println(""Earth"");
            }
        } catch(InterruptedException e) { }
    }
}

public class StartUserThreads {
    public static void main(String[] args) {
        Resource r = new Resource();
        UserThread ut1 = new UserThread();
        ut1.res = r;
        UserThread ut2 = new UserThread();
        ut2.res = r;
        ut1.start();
        ut2.start();
    }
}

Which of the following will give the correct output for the above code?"
"Consider the following code:

public class Sand implements Runnable {
    Runnable t;
    Sand() { }
    Sand(Thread t) {
        this.t = this;
    }
    public static void main(String[] args) {        
        new Thread(new Sand(new Thread(new Sand()))).start();
        
    }

    public void run() {        
        synchronized(this) {
            System.out.println(""Welcome"");
            new Thread(t).start();
            System.out.println(""Planet"");
        }
    }
}

Which of the following gives the valid output for the above code?"





















